{"/":{"title":"ü™¥ Digital Garden","content":"## Projects\n\n### [Fermentation](projects/fermentation/fermentation_main.md)\n\n### [Sewing](sewing/sewing_main.md)\n\n### [Coding](projects/coding/coding_main.md)\n\n### [Environment \u0026 Climate Action](climate/climate_main.md)\n\n\n\n\n## [Learning log](blog/learning_log.md)\n\n\n## [Books](projects/books/books_main.md)\n\n\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/blog/learning_log":{"title":"Learning log","content":"\n\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/climate/climate_main":{"title":"Environment \u0026 climate action","content":"\n\n\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/content/projects":{"title":"","content":"","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"\n## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display and 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: false\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"ü™¥ Quartz 3.2\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\n\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e üîó Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: üé® [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2022-07-27T18:17:04.945419034Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```shell\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ‚úèÔ∏è Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/showcase":{"title":"ü™¥ Environmental initiatives","content":"\nI wonder why this doesn't work.\n\nAnything wrong here?\n\n\n## How about\n\u003e üìö Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\n\n### Troubleshooting\n- üöß [Troubleshooting and FAQ](notes/troubleshooting.md)\n- üêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- üëÄ [Discord Community](https://discord.gg/cRFFHYye7t)\n","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e ‚ö†Ô∏è **WARNING** ‚ö†Ô∏è\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2022-07-27T18:17:04.949419039Z","tags":null},"/projects/books/books_main":{"title":"Books main","content":"\n## Read 2022\n- Star Trek Deep Space 9 - Avatar 2/2 (S. D. Perry)\n- Sovande j√§ttar (Sylvain Neuvel)\n- The Naked Shore of the North Sea (Tom Blass)\n- The Machinery of Life (David S. Goodsell)\n- The Lives of Dax (Marco Palmieri)\n- Culinary Reactions: The Everyday Chemistry of Cooking (Simon Quellen Field)\n- The Wee Free Men (Terry Pratchett)\n- A Hat Full of Sky (Terry Pratchett)\n- Where the Crawdads Sing (Delia Owens)\n- The Happy Isles of Oceania (Paul Theroux)\n- Animal Farm (George Orwell) (audiobook)\n\n\n\n## Read 2021\n- The Star Mountains (T.A.S. Hayllar)\n- Naked Statistics (Charles Wheelan)\n- Going Postal (Terry Pratchett)\n- Tread Brightly: Notes on Ethical Travel (Sarika Bansal)\n- The man who mistook his wife for a hat (Oliver Sacks)\n- Star Trek Deep Space 9 - Avatar 1/2 (S.D. Perry)\n- Eloquent JavaScript: A modern introduction to programming (Marijn Haverbeke)\n- Show your work: 10 ways to share your creativity and get discovered (Austin Kleon)\n- **The Ministry for the Future (Kim Stanley Robinson)** [[The Ministry for the Future]]\n- The Address Book (Deidre Mask)\n- Mr. Penumbra's 24 hour bookstore (Robin Sloan)\n- A fine balance (Rohinton Mistry)\n- **Let my people go surfing (Yvon Chouinard)** [[Let my people go surfing]]\n- Project Hail Mary (Andy Weir)\n- V√•ran hud, v√•rat blod, v√•ra ben (John Ajvide Lindqvist)\n- The physician (Noah Gordon)\n\n\n## Read 2020\n- The Cat's Table (Michael Ondaatje)\n- **Atomic Habits (James Clear)** [[Atomic Habits]]\n- How to Be a Bad Birdwatcher (Simon Barnes)\n- Tyll (Daniel Kehlmann) \n- The Wizard and the Prophet (Charles C. Mann)\n- Fallensteller (Sasa Stanisic)\n- Ein ganzes Leben (Robert Seethaler)\n- Boom Town (Sam Anderson)\n- Reef Life: An Underwater Memoir (Robert Callum)\n- **Humankind (Rutger Bregman)**\n- Das fl√ºssige Land (Raphaela Edelbauer)\n- The Mushroom at the End of the World (Anna Lownhaupt Tsing) [[The Mushroom at the End of the World]]\n- Station Eleven (Emily St. John Mandel)\n- Picture This (Molly Bang)\n- Das Geburtstagsfest (Judith Taschler)\n- Star Trek Mosaic (Jeri Taylor)\n- Mushrooms, a Natural and Cultural History (Nicholas P. Money)\n- **Kissa by Kissa (Craig Mod)** [[Kissa by Kissa]]","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/100-days-of-Python":{"title":"100 days of Python","content":"\n## 100 days of Python\nhttps://www.udemy.com/course/100-days-of-code/\nDr. Angela Yu\n\n## Basics\nFor commenting a whole line:¬†**Cmd**+**Shift**+**7** (or **Cmd**+**/**) (**Cmd**+**z** to undo)\n\n### The Python input function\nPrint function:¬†`print()`\nInput function:¬†`input()`\n\n`input` works like this:¬†if I write `print (input (\"What's your name?\"))` it will print the question and I can put my name in.¬†\n\nHow to store that name in a variable? Just put in a variable name instead of the `print` statement:\n\n1.  name = input (\"What's your name?\")\n\nSimilarly, if I want to turn the answer immediately into a different data type, I can do that together with the `input` command:\n\n`age =¬†int(input (\"How old are you?\")`\n\nUsually, inputs are strings, so if I just write:\n\n`name =¬†input(\"What's your name?\")`\n\nThe input value is stored as a string.\n\n### Understanding data types and how to manipulate strings\n`type()` Check the type of a variable, e.g. int, str\n`str()` Turn something into a string\n`int()` Turn something in to an integer\n`round()` Round a number to a specific number of decimal places, e.g. `round(3.5542, 2)`\n\n**F-string:** In front of a string (i.e. in front of the quotes) you type an `f`, then you can include different data types in curly brackets in the quotes. No need to doing `str()` or `int()`, etc.\n\n`print (f\"My weight is {weight} kg and my height is {height} m.\")`\n\n`variable =¬†variable + 1` is the same as `variable += 1`\n\nSame for -=, *=, /=\n\nE.g. `variable =¬†variable*2` is the same as `variable *=2`\n\n### Control flow and logical operators\n`if condition 1:`\n`    do A`\n`elif condition 2:`\n`    do B`\n`else: `\n`    do C`\n\n`\"Silvia\".lower()` --\u003e¬†\"silvia\"\n`\"Silvia\".count(\"i\")`¬†--\u003e¬†2\n\nUse three single quotes for writing multi-line strings:\n\n`print ('''This`\n`is a `\n`multi-`\n`line string`\n`''')``\n\n### Random module\nRandom number generation with the random module:\n\n`random.randint(1, 10) #Generates random integer between (and including)¬†1 and 10`\n`random.random() #Generates random float between (and including)¬†0 and (excluding) 1`\n\nPick a random item from a list:\n`random.choice(list_name)`\n\n_Don't try to learn every single function by heart. Instead, when you come across a new thing (e.g. a new data structure), read through the documentation to see what is possible. Then next time when you use it, you can look specific things up._\n\n**When importing modules:** \n\neither\n`import chosen_module`\n`print (chosen_module.sentence)`\n\nor\n`from chosen_module import sentence`\n`print (sentence)`\n\nor\n`import chosen_module as mod`\n`print (mod.sentence)`\n\nE.g. to import and use the Turtle class from the turtle module, either write:\n`import turtle`\n`new_turtle = turtle.Turtle()`\n\nor\n`from turtle import Turtle`\n`new_turtle = Turtle()`\n\nThe latter is useful when the class is used often and you don't want to type `turtle.Turtle()`¬†all the time.\n\nIt's also possible to import everything from a module and use it as if it was part of the normal environment (i.e. without the module name).\n`from turtle import *`\n\nThis however can be confusing, since it's often good to know which module a function belongs to.\n\nE.g.\n`choice([1,3,4])` looks confusing out of context. But if you write `random.choice([1,3,4])` it's much clearer that it is part of the random module and that a random number is picked from this list.\n\nFor long module names, it's also possible to use aliases:\n\n`import turtle as t`\n`new_turtle = t.Turtle()`\n\n### Lists\n**Lists** store data in a specific order\n`fruits =¬†[\"Cherry\", \"Apple\", \"Pear\"]`\n\nTo access a specific entry from the list:\n`fruits[0]` or `fruits[-1]`\n\nTo add an item to the end of an existing list:\n`fruits.append(\"Melon\")`\n\nTo add several times to the end of an existing list:\n`fruits.append([\"Strawberry\", \"Orange\", \"Peach\"]`\n\n`random.choice(list)`\nThis generates a random choice from a given list.\n\n`str.split()`\nSplits a string into separate components based on some defined divider, e.g. a comma.\n\n`str.split(\",\")`\nThe result will be a **list** that contains the separate components of the string.\n\nNested lists contain **lists of lists**. When addressing a specific item in a nested list, you have to first pick the right nested list, then the item in that list, e.g. the first item in the first list would be:\n`print (list([0][0])`\n\nTransform a string into a list:\n`list(string)`\n\n**in**\n\nThe **in** construct is an easy way to test if an element is contained in a collection, e.g. in a list.\n\n`list = [\"Silfa\", \"Duncan\", \"Laika\"]`\n`if \"Silfa\" in list:`\n`    print (\"yay\")`\n\n### Loops\n`letters = [\"a\", \"b\", \"c\", \"d\"]`\n`for letter in letters:`\n`   print (letter)``\n\nNB:¬†The item (here `number`)¬†in a for loop does **NOT** count from 0 to i, but instead takes the value of the first item in the list (e.g. `\"a\"`)¬†and takes on that value. This means, that to have some kind of **counting variable** that is first set to 0 (outside the loop)¬†and then increases with each round inside the loop, you have to do the following:\n`count = 0`\n`for letter in letters:`\n`    print (letter)`\n`    count += 1``\nThen with each round through the loop, `count` will increase by 1, and will in the end have the same value as items in `letters`.\n\nFor loops are often used to loop through lists, but you can also loop through ranges of items that are not lists.\n\n**for loops and the** `**range()**` **function**\n\n`for number in range (a, b):`\n`    print (number)`\n_NB:¬†a is included, b is not_\n\nThe step size can also be changed, e.g. to increase the numbers by 3, type:\n`range(1, 100, 3)`\n\n**So there are 2 types of for loops:**\ntype 1\n\n`for item in list _of_items:`\n`    #do something to each item`\n\ntype 2\n`for number in range(a,b):`\n`    #do something``\n\n**_When to use a for and when a while loop?_**\n\n**For** loops are great when you iterate over something, and you want to do something with each thing you iterate over. E.g. iterating through a list.\n\n  \n\n**While** loops are used when you just want to carry out some sort of functionality many times until a condition is met. Don't care about what number in a sequence you're in, which item in a list you're iterating through, etc.\n\nWhile loops are a bit more dangerous than for loops. In for loops you always have an upper bound, but while loops will continue running until the condition evaluates to `FALSE`. That can lead to infinite loops.\n\nA good thing to do when you don't know why you get an infinite loop, simply `print()` the condition inside the loop and check what's happening.\n\n**While loop**\nA loop that keeps on going while a condition is `TRUE`.\n\n`while something_is_true:`\n`    #do a thing, then test the condition again, etc.`\n\nOnce the condition evaluates to FALSE, the while loop is skipped.\n\nExample of how a while loop can be used:\n`count =¬†6`\n`while count \u003e 0:`\n¬† ¬† ¬† `print (\"Hello!\")`\n¬† ¬† ¬† `count -= 1¬† ¬†#this decreases the` `number of counts by one every time` `the loop runs`\n  \nWhile loops can also be used while a condition is `FALSE`. For that, use this syntax:\n\n`while not some_condition_that_is_true:`\n`    #do something`\n\nThis means the loop runs while the condition is `FALSE`, but as soon as it evaluates to `TRUE`, we drop out of the loop.\n\nA good way to **include a check in a while loop** is to set a variable to `True` (or `False`) before the while loop starts. Then set the while loop to run WHILE¬†the `variable == True`. Inside the while loop, something makes the variable either remain `True` or switch to `False`. In case of False, the while loop will stop.\n\nA good way to **increase something or build something up in a For loop** is to set an empty string or an empty list outside of the for loop first. Then inside the for loop, in every turn something is added to the string or list, adding up to the final string or list when the for loop is finished.\n\n### Dictionaries\nDictionaries are useful if you want to associate labels with each value. Lists are better if you are storing similar data, such as a list of proces or names, where you cannot label each value.\n\n`dictionary1 = {`\n`   key1: value1,`\n`   key2: value2,`\n`   key3: value3,`\n`   }\n\nTo get a value back:\n`dictionary1[key2]`\n\nTo add an entry to the dictionary:\n`dictionary1[key4] =¬†value4`\n\nSimilar to lists and strings, it's often useful to start with an _empty_ dictionary, and then later on add to the dictionary.\n`dic_new =¬†{}`\n\nWhen looping through a dictionary, usually the **key** will be picked out:\n\n`for key in dictionary1:`\n`   print (key)`\n\nIf you want to access a specific **value** in a dictionary (e.g. when looping through the dictionary):\n\n`for key in dictionary1:`\n`    print (dictionary1[key])``\n\n**Nested dictionaries**\nThe nested dictionaries don't need to be the same size as the outer dictionaries. They can also include lists, strings, numbers, etc.\n\nLists are ordered and are accessed by the position inside the list. Dictionaries are NOT ordered.\n\nDictionaries (or lists)¬†are like folders. They can contain values, but they can also contain other dictionaries (or lists).\n\nA **_dictionary that contains a list_** looks like this:\n\n`travel_log = {`\n`   \"France\": [\"Paris\", \"Lille\", \"Dijon\"],`\n`    \"Germany\": [\"Berlin\", \"Hamburg\", \"Stuttgart\"],`\n`    }`\n\n  \nA **_dictionary that contains a dictionary_** looks like this:\n`travel_log = {`\n      `\"France\": {\"cities_visited\": [\"Paris\", \"Lille\", \"Dijon\"], \"total_visits\": 12},`\n      `\"Germany\": {\"cities_visited\": [\"Berlin\", \"Hamburg\", \"Stuttgart\"], \"total_visits\": 5},`\n`}`\n\nAnd a **_list that contains dictionaries_** looks like this:\n`travel_log = [`\n`{`\n`\"country\": \"France\", `\n`\"cities_visited\": [\"Paris\", \"Lille\", \"Dijon\"], `\n`\"total_visits\": 12,`\n` },`\n` {`\n`\"country\": \"Germany\",`\n`\"cities_visited\": [\"Berlin\", \"Hamburg\", \"Stuttgart\"],`\n` \"total_visits\": 5,`\n` },`\n` ]`\n\nTo get **values** from a dictionary, type the variable for the dictionary, followed by the key in square brackets:\n`dictionary[\"name\"]`\n\nTo get the **keys** from a dictionary, you can turn the keys into a list, and then refer to an item in this list. NB: items in a list are ordered, while items in a dictionary are not!\n`keys_list =¬†list(dictionary)`\n\nTo get **values from a dictionary of lists**, type the variable for the dictionary, the index of the entry in question, followed by the key in square brackets:\n`dictionary[0][\"name\"]`\n\n#### Generate dictionary from a list\nSeveral options:\n- `dict.fromkeys()` Used to create a dictionary from a list. It accepts a list of **keys** that you want to turn into a dictionary. Optionally, you can specify a value you want to assign to every key. You cannot set individual values for each item in the dictionary. \n\tE.g. \n\t`fruits = [\"Apple\", \"Pear\", \"Banana\"]`\n\t`fruit_dict = dict.fromkeys(fruits, \"In stock\")`\nIf we did not specify a value in our code, the default value for the keys in the dictionary would be `None`. \n- Dictionary comprehension: Creates a new dictionary from an existing list. You can specify different valuues for each key in the dictionary. \n\tE.g.\n\t`fruits = [\"Apple\", \"Pear\", \"Banana\"]` \n\t`fruit_dict = { fruit: \"In stock\" for fruit in fruits }\n\tThe dictionary comprehension runs through each item in the list `fruits`. We then add an item to our new dictionary for each fruit in our list. \n- `zip()` Converts (merges) two or more lists into a list of tuples. You can use the `dict()` method to convert the list of tuples into a dictionary. This way, one list can become the keys of the dictionary, and the other the values, e.g. if you have one list with fruits, and the other with the price of these fruits. \n\t`fruits = [\"Apple\", \"Pear\", \"Banana\"]`\n\t`prices = [3.5, 4.0, 2.1]`\n\t`fruit_dict = dict(zip(fruits, prices))`\n\n#### Loop (iterate) over a dictionary\nDictionaries contain an `__iter__()` method that iterates over the keys. this method is automatically called when you put a dictionary into a `for` loop.\n`for key in a_dict: print (key)` \n\nIf you want access to the values, use the indexing operator `[]` with the dictionary and its keys:\n`for key in a_dict: print (a_dict[key])`  \n\nWhen you're working with dictionaries, it's likely that you'll want to work with both the keys and the values. One of the most useful ways to iterate through a dictionary is by using `.items()`, which is a method that returns a new view of the dictionaries items. It's a dynamic view, meaning that if the dictionary changes, the view reflects these changes. \nViews can be iterated over to yield their respective data, so you can iterate through a dictionary in Python by using the view object returned by `.items()`: \n`for item in a_dict.items(): print(item)`--\u003e returns tuples of the key-value pairs\n\n\nIf you just need to work with the keys of a dictionary, then you can use `.keys()`, which is a method that returns a new view object containing the dictionary's keys. To iterate through a dictionary by using `.keys()`, you just need to call `.keys()` in the header of a `for` loop:\n`for key in a_dict.keys(): print (key)` \nSimilarly, you can use `.values()` to iterate through values. \nBoth `.keys()` and `.values()` can be used to check if a key or value is present in a dictionary by using `in`: `\"apple\" in a_dict.values()`. \n\n#### Modifying values and keys\nYou'll need to use the original dictionary! \n\n#### Filtering items\nSometimes you'll want to create a new dictionary from an existing dictionary, that only stores the data that satisfies a given condition. You can do this with an `if` stateent inside a `for` loop:\n`a_dict = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}``\n`new_dict = {}`\n`for key, value in a_dict.items():`\n`if value \u003c= 2: new_dict[key] = value`\n`#new_dict = {\"one\": 1, \"two\", 2}` \n\n\n### Tuples\n`my_tuple =¬†(1, 2, 3)` --\u003e similar to list\n\nItems in a tuple are ordered (as in a list) and are accessed by indexing with square brackets.\n\nWhat's the difference from a list?¬†A tuple's values can't be changed once it's created (i.e. **_immutable_**).\n\nWhen do you want to use a tuple?¬†When creating something that shouldn't be changed or is protected from accidental change (e.g. the colour scheme of a website).\n\nWhen you want to change a tuple's values, you can convert it into a list by writing:  \n`list(my_tuple)`\nand then you can change the values as you would in a list.\n\n**Creating tuples:**¬†\n`new_tuple =¬†(first_item, second_item, third_item)`\n--\u003e separated by commas, and in round brackets\n\nTo access tuples, use same notation as for lists:\n`new_tuple[0] #first_item`\n\n\n## Functions\n**Functions**\nPython has built-in functions, e.g. `int()`, `range()`, `print()` or `round()`.\n\nCreating your own functions:\n`def my_function():`\n¬† `¬† ¬† ¬† content of function`\n\nTo call the function:\n`my_function()`\n\n**Functions with inputs**\n\n`def my_function(something):`\n`    #Do this with something`\n`    #Then this `\n`    #And finally this with something`\n\nA function can have several parameters:\n`def my_function (param1, param2):`\n\nThis called **positional arguments**\n`def my_function (a, b, c):`\n`    #Do this with a`\n`    #then do this with b`\n`    #then this with c`\n\nIn comparison with keyword arguments the order doesn't matter. When a function is called, the name of the parameter is used, together with the argument for it:\n\n`my_function (a=1, b=2, c=3)`\n\nSince order doesn't matter, we could also write:\n\n`my_function (b=2, c=3, a=1)`\n\n**_Functions with outputs_**\n\nCan be simple or take inputs (arguments). Inside the function, the keyword `return` is used to \"transfer\"¬†a result/output to the _outside_ of the function, so it can be used further.\n\n`def my_function():`\n`result = 2*3`\n`return result`\n\nAfter the `return` keyword, the function is exited, and anything that would come after the `return` keyword in the function will not be executed. This can be used to return the function early if needed (e.g. check with an `if` statement if some condition is true, and then just use the `return` keyword to exit out of the function).\n\n**Different types of functions:**\n  \n**_Simple functions_**\nVery simple, without any parameters. Just reduced complexity by reducing the amount of code you need to write (e.g. if there is a recurring task).\n\n`def my_function():`\n`#do this`\n`#then do this`\n`#finally do this`\n\nTo call this function:\n`my_function()`\n\n**_Functions with inputs_**\nFunctions with parameters take an input that gets passed into the function when the function is called. This allows us to modify what the function does, depending on what input was passed in.\n\n`def my_function(something):`\n`#do this with something`\n`#then do this`\n`#finally do this`\n\nTo call this function:\n`my_function(123)`\n\n\n**_Docstrings_**\nWith docstrings, you can include a comment or little explanation with your newly created function about what it does and what it takes as input. Docstrings must be placed in the first line of the function and have to be encased in triple quotation marks. They can run over several lines.\n\n`def some_function(a, b):`\n`\"\"\"This function takes inputs a and b and does something to them, `\n`returning something else.\"\"\"`\n\n**Keyword arguments**\nEspecially for functions you haven't written yourself, it's really useful to write keyword arguments instead of positional arguments when calling the function.\n\nWith keyword arguments, you specify which argument you are referring to.\n`def function1 (a, b, c):`\n`#some function text`\n`function1(a=13, b=44, c=0)`\n\n**Recursion** \n=¬†calling a function inside itself\nYou can also take the output of one function call as an input for another function call. This is very useful for complex functions.\n\n**Useful functions:**\n\n`sum([list])` gives a sum of all items in the list\n`random.choice([list])` picks a random item from a list (requires to import the random package first)\n\nGlobal variables are by convention written in all caps.\n\nTo exit a function, simply use the `return` keyword.\n\n**Higher order function**\nA function that can work with other functions. E.g. it can take another function as an input and work with it inside the body of the function.\n\nWhen passing a function as an argument to another function, don't use the paranthesis at the end. E.g.\n`function_a (function_b)`\n\n\n## Debugging\n1. Describe the problem\n2. Reproduce the bug\n3. Play computer\n4. Fix the errors\n5. Print is your friend\n6. Use a debugger\n7. Take a break\n8. Ask a friend\n9. Run your code often\n10. Ask Stackoverflow\n\nTo access and change a global variable inside a local environment, e.g. a function, you have to write `global` + variable name first.\n\nFor example:\n`some_variable = 4`\n`def increase_something():`\n`global some_variable`\n`some_variable += 1``\n\n\n## Object-oriented programming (OOP)\n**OOP analogy:**\nYou come to a foreign country and don't know the language, don't know the city and don't have local money, but you want your clothes dry-cleaned. Instead of doing it yourself, you ask the hotel staff to do it, who know the language, the city and have local money.\n`hotel.dry_clean_clothes()`\n\n\nObjects have things they HAVE¬†and things they DO.\nThings they HAVE =¬†**_attributes_**\nE.g.\n`is_holding_plate = True`\n`tables_responsible = [4, 5, 6]`\n\nThings they DO =¬†**_methods_**\nMethods are functions specific for an object\nE.g.\n`def take_order(table, order):`\n`#takes order to chef`\n`def take_payment(amount):`\n`#add money to restaurant``\n\n### Classes\nClasses are _blueprints_ for objects.\nClasses are usually written in Pascal case, i.e. every word beginning is capitalized\nE.g.\n`car =¬†CarBlueprint()`\n\nTo leave a class or function empty (for now), you can use the keyword `pass` to avoid \"indent error\" messages.\n\n#### init function\n**Constructor** =¬†part of the class that specifies what should happen when our object is constructed (= initializing an object). Variables and counters are set to their starting values.\n\nUse special function `__init__ (self)` to initialize the attributes.\n\nThe init function is going to be called every time a new object from this class is created.\n\nIn addition to the parameter self, there can be as many parameters as you want in the brackets after __init__. These parameters get passed in when a new object is constructed. These parameters can then be used to set an object's attributes.\n\n\nTo have a default value for an attribute, instead of setting it equal to one of the parameters of the init function, set it to a value in the init function (not the parameters!).\n\ne.g.\n`def __init__ (self, user_id, username):`\n`self.user_id = user_id`\n`self.username = username`\n`self.followers = 0`\n\nThis way the new object has new_object.followers set to 0 by default.\n\nExample of init function:\n`class Car:`\n`def __init__(self, seats):`\n`self.seats = seats`\n\nThe number of seats specificied when a new object of this class is initialized gets passed to that object as an attribute.\n\n`new_car =¬†Car(5)` --\u003e this will set the attribute new_car.seats to 5.\n\nThere can be many parameters in the init function. However, it means that whenever you create a new object from this class, you MUST¬†provide all these pieces of information for the new object.\n\n#### Making a new class\n`class User:`\n`#add functions, etc.`\n\n`user_1 =¬†User()`¬†to make a new instance of the class\n\n`user_1.username =¬†\"Silfa\"` to create a new attribute for the object. An attribute is a variable that is associated with an object.\n\nBut for attributes that all new instances should have in common, it's better to include them in the constructor.\n\n#### Methods in classes\nMethods = what the object DOES, i.e. a function that the object has.\n\nMethods can use `self.` attributes of objects.\n\nTo call the method, use the normal dot notation with brackets after the method, e.g.\n`user_1.start_game()`\n\nMethods in classes always need to have a `self` parameter as the first (and sometimes only)¬†parameter. This means that when the method is called, it \"knows\" the object that called it.\n\n`def new_method(self):`\n`self.followers += 1`\n\nThe `self` keyword is a way to refer to the object that is being created from a class.\n\nWe can use the class name inside an object to tap into the class.\n\nFor example we can create a list of objects by initiating new instances of a class inside a loop and filling a list with these new objects. These objects have all the attributes that are defined in the class constructer, and these attributes can be accessed with dot notation.\n\n\nWhen inside a class, and calling one of the functions inside one of the other functions, you have to use `self.` before the function name.\n\nE.g.\n`def function_using_another_function(self, input, something):`\n`self.previous_function(attribute1, attribute2)`\n`...`\n\n\nDifferent **instances** of classes can have different **states**. E.g. Turty and Timmy can be different instances of the class Turtle(), and they can have different states, e.g. `turty.color = green` and `timmy.color = purple`. \n\n## Interesting modules and other things\n\n**colorgram** is a Python library that lets you extract colours from images.\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/Coding-log":{"title":"Coding log","content":"\n19-12-2020 \nRaycasting Coding challenge, p5.js, start https://www.youtube.com/watch?v=TOEi6T2mtHo\u0026t=1374s\n\n20-12-2020\nCorals, branching network, Rune.js, https://generativelandscapes.wordpress.com/2019/07/03/networks-and-space-colonization/\n\n29-12-2020\np5 \u003e rune sketch: P2.2.1\nMissing semester 2020: Command line environment\nGo through bash and shell commands\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/Command-line-basics":{"title":"Command line bascis","content":"\nhttps://www.taniarascia.com/how-to-use-the-command-line-for-apple-macos-and-linux/\n\nChange permissions to user execution:\n`chmod u+x filename`\n\n\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/Genart-ideas":{"title":"Genart ideas","content":"\n## Starry night mountains\n\n![[Starry nights patch.jpg]]\nfrom https://www.etsy.com/se-en/listing/633985377/starry-night-mountain-patch-geometric?ref=shop_home_active_186\u0026crt=1\n\nRandomly placed points, connected to their nearest neightbours with dashed line, but only to their below neighbours. \n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/JS-Modules":{"title":"JS Modules","content":"\n## Modules\nA module is a piece of program that specifies which other pieces it relies on and which functionality it provides for other modules to use, i.e. is visible to other modules (its _interface_). The interface are the connection points between different modules; there's some _internal_ stuff going on inside the module, and some _public_ stuff that is shared with other modules. \n\nSee also: [[JS Packages]], [[JS npm]]\n\nWhy modules:\n- To not have to code everything from scratch if you want to use something repeatedly. \n- To manage complexity.\n- To have a \"LEGO\" system of code pieces that can interact through well-defined connectors. \n\nThe relations between modules are called _dependencies_ (i.e. a module _depends_ on another module). Dependencies are the other modules that a module makes use of.\n\n_Think about how to structure your code and what should maybe go into modules after you have done most of the coding, not during. _\n\nIf we want to make dependency relations part of the code, we'll have to take control of **loading dependencies**. Doing that requires being able to execute strings as code. \nFor that, we use the `Function` constructor. It takes two arguments: a string containing a comma-separated list of argument names, and a string containing the function body. \n\n```\nlet plusOne = Function(\"n\", \"return n+1;\");\nconsole.log(plusOne(4));\n// 5\n```\n\n\n**`require`**\nWhen you call this function with the module name of a dependency, the module is loaded and returns its interface. Modules automatically get their own local scope. All they have to do is call `require` to access their dependencies and put their interface in the object boud to `exports`.\n\nUsually modules have their dependencies on the top, e.g.\n```\nconst ordinal = require(\"ordinal\");\n```\nCalling `require` involves reading the module's code, wrapping it in a function and calling it. \nIt's usually written as a filepath, e.g. `\"./format-date\"` (i.e. the file `format-date.js` in the same directory). \n\n**`exports`**\nThe module adds its interface function to `exports` so that modules that depend on it get access to it, e.g. \n```\nexports.formatDate = function(date, format) {......};\n``` \n\n**`module`**\n\n## ECMAscript modules\nSince 2015, there's a new standard, that's however slow to be widely adopted. It uses **`import`** instead of `require` to acess a dependency, and **`export`** instead of `exports` to export things. \n```\nimport ordinal from \"ordinal\";\n\nexport funciton formatDate(date, format) {......}\n```\n\nIt's possible to rename imported bindings using the word **`as`**:\n`import {days as dayNames} from \"date-names\"; `\n\n\n\n\nWhen writing your own modules, find out what data structures people are usually using and follow their example, if possible. \n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/JS-Packages":{"title":"JS Packages","content":"\n## Packages\n\n_Packages_ enable you to build a program out of separate pieces or run these pieces on their own, and also apply the same pieces in different programs. \nA _package_ is a chunk of code that can be distributed (copied and installed) on its own. It may contain one or more _modules_ and has information about which other packages it depends on. \n\nNPM is a repository of JS packages. \n\nSee also: [[JS Modules]], [[JS npm]]\n\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/JS-npm":{"title":"JS npm","content":"\n## NPM = node package manager\nhttps://npmjs.org\n\n_NPM_ is an online service where one can download (and upload) packages, and a program (bundled with Node.js) that helps you install and manage them. \n\n\n*Useful npm packages*: \n- nodemon: monitors node server and refreshes each time you cange and save the code. To install: `npm install -g nodemon`. To use with a server: `nodemon index.js`. \n- \nSee also: [[JS Packages]], [[JS Modules]]\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/Javascript-coding":{"title":"Javascript coding","content":"\n## min and max value of an array\nhttps://medium.com/coding-at-dawn/the-fastest-way-to-find-minimum-and-maximum-values-in-an-array-in-javascript-2511115f8621#\n\n*Using Math functions*\n`Math.min(1,3,5) //1`\n`Math.min([1,3,5]) //NaN`\nBut `Math.min()` and `Math.max()` expect numbers as arugments, not an array. Use spread syntax `(...)` instead, since it causes the values of the array to be expanded or spread into the function's arguments. \n`Math.min(...[1,3,5]) //1\nMath.max(...[1,3,5]) //5`\nThe spread operator is not good for speed though, slowing down more the higher the number of elements in the array is. But for a few elements it's fine. \n\nOr alternatively, `.apply()` can be used:\n`Math.min.apply(null, [1,3,5]) //1`\nThis method works fine also for large arrays. \n\n*Sorting the list numberically*\n`array.sort() //In lexographical order`\n`array.sort((a,b) =\u003e a-b) //Sort numberically, ascending`\n`const min = array[0] //Lowest value`\n`const max = array[array.length-1] //Highest value`\n\n*Using `.reduce()`*\n`const min = () =\u003e array.reduce((min, currentValue) =\u003e Math.min(min, currentValue), array[0])`\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/coding_main":{"title":"Coding Main","content":"\n## [Projects](projects/coding/coding_projects.md)\n\n\n## [Resources](projects/coding/coding_resources.md)\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/coding_projects":{"title":"Coding projects","content":"\n## Generative art / Creative coding\n\n\n## Dataviz\n\n\n## Maps\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/coding_resources":{"title":"Coding resources","content":"\n## Python\n[[Python basics]]\n[[Python coding log]]\n[100 days of Python](projects/coding/100%20days%20of%20Python.md)\n[[Python resources]]\n\n\n## Command line\n[Command line basics](projects/coding/Command%20line%20basics.md)\n[[Command line log]]\n[[Command line resources]]\n\n\n## Javascript\n[[JS basics]]\n[JS coding log](projects/coding/Javascript%20coding.md)\n[JS Modules](projects/coding/JS%20Modules.md)\n[JS Packages](projects/coding/JS%20Packages.md)\n[JS npm](projects/coding/JS%20npm.md)\n[[JS resources]]\n\n\n### p5.js\n[[p5.js basics]]\n[p5.js log](projects/coding/p5.md)\n[[p5.js projects]]\n[[p5.js resources]]\n\n\n## Generative art / creative coding\n[Genart ideas](projects/coding/Genart%20ideas.md)\n[[Genart inspo]]","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/coding/p5":{"title":"p5.js","content":"\n## Using p5 without a canvas\n```\nnew p5();\nfunction setup() {\n\tnoCanvas()\n}\n```\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/cooking/Mealplanning-2022":{"title":"Mealplanning 2022","content":"\n- Kimchi udon\n- Chili garlic noodles (Yeung Man)\n- Gimbap\n- Dumplings with rice and edamame beans or pak choi\n- Laoganma tofu rice \u0026 pickled vegetables\n- Kitsune udon\n- Japanese curry\n- Pitabread/Libabr√∂d with meatballs, cabbage and kebabsauce\n- Kimchi fried rice\n- Pasta bake\n- Cream spinach with potatoes and sausage\n- Couscous salad\n- Ottolenghi's giant couscous\n- Mushroom mapo tofu\n- Bibimbap\n- Keema sandwiches\n- Tomato soup with bread\n- Pasta with olives, capers, pine nuts, sugar snaps\n- Misir wat\n- Hyderabadi sour dal\n- Burgers\n- Pasta with tomato-meatball sauce\n- Creamy mushroom pasta with meatballs\n- Pasta with roasted fennel and cocktail tomatoes\n- Duncan's chili\n- Fried rice\n- Freekeh with parsely, preserved lemons and pine nuts\n- Pineapple lentil curry\n- Carrot soup with Bosnian bread","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/cooking/Recipes-tried-tested":{"title":"'Recipes (tried \u0026 tested)'","content":"\n## Homemade pasta (tagliatelli)\n- 350 mL water\n- 5 Tbsp olive oil\n- 500 g durum flour\n- 250 g regular wheat flour\n\n1. Mix the ingredients well in a big bowl. Once incorporated, tip the dough out on a clean surface. \n2. Knead the dough for 12-15 min resulting in a very smooth and homogeneous dough ball. \n3. Wrap it tight in clingfilm, then let it rest in the fridge for 30 min. \n4. Divide the dough in 4 roughly equal pieces. Take one at a time, leave the others in the fridge for now. \n5. Roll the dough through the pasta machine, folding in between: 5-6 times at 1, 3, 5, 6. Then once at 7, dust the surface with a bit of flour, then run through the tagliatelli cutter. Drape loosly on the table, let dry for 15 min, then drop in boiling, well salted water and cook for 2-3 min. Drain, serve. ","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/cooking/To-cook-recipes":{"title":"To cook (recipes)","content":"\n### Homemade ramen noodles\nhttps://www.seriouseats.com/2018/11/the-ultimate-guide-to-making-ramen-noodles-at-home.html\nThis seems to be quite hard, as the dough has extremely low hydration and will probably break your pasta maker.\n\n### Hiyashi Chuka (Cold Ramen)\nhttps://www.seriouseats.com/2015/06/how-to-make-hiyashi-chuka-japanese-cold-ramen-easy-summer-noodle-dish.html\nCold ramen with different toppings, crunchy veggies in a vinegary sauce. \n\n\n### Bohnenschmalz Aufstrich\nhttps://www.smarticular.net/bohnenschmalz-vegan-rezept-selber-machen-ohne-kokosoel-palmoel/\nRecommended by Angie.\n\n### Vegan brownies\nhttps://jessicainthekitchen.com/vegan-almond-flour-brownies-gluten-free-fudgy/\n\n### Vegan almond cardamom cake \nhttps://www.cookwithmanali.com/vegan-almond-cardamom-cake/\n\n### Yaki Onigiri\nhttps://vegnews.com/2019/7/vegan-grilled-onigiri-with-japanese-style-bbq-glaze\nhttps://biancazapatka.com/en/yaki-onigiri-japanese-rice-balls/\nCrispy grilled rice balls with either a BBQ glaze or stuffed with avocado and peanuts. \n\nhttps://greenevi.com/vegan-onigiri-japanese-stuffed-rice-balls/\n\nhttps://www.landsandflavors.com/vegan-onigiri-six-ways/\n\n### Vietnamese Chicken Curry\nTry with the dried vegan chicken balls \nhttps://rasamalaysia.com/vietnamese-chicken-curry/\n\n### Mini chickpea flour frittatas/muffins\nhttps://simple-veganista.com/mini-chickpea-flour-frittatas/\n\n### One pan Mexican quinoa\nhttps://damndelicious.net/2014/04/09/one-pan-mexican-quinoa/\n\n### Vegan recipes\nhttps://www.theguardian.com/lifeandstyle/2021/jan/15/19-brilliant-vegan-recipes-from-orange-poppy-seed-cake-to-smoked-salmon\n\n### Vegan egg salad (or egg sandwich filling)\nhttps://www.loveandlemons.com/vegan-egg-salad/\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/cooking/Weihnachtskekserl":{"title":"Weihnachtskekserl","content":"\n## Vanillekipferl\n\nhttps://www.oetker.at/at-de/rezepte/r/vanillekipferln\n**1/2 Rezept**\n125 g glattes Mehl\n1/2 Msp Backpulver\n65 g gesiebter Staubzucker\n1/2 Pck. Vanillezucker\n1.5 Dotter\n100 g weiche Butter\n65 g geriebene Mandeln\n\n25 g Staubzucker + 1/2 Pck. Vanillezucker zum W√§lzen\n\n1. Mehl mit Backpulver vermischen und in eine R√ºhrsch√ºssel sieben. Die √ºbrigen Zutaten der Reihe nach dazugeben und mit dem Handmixer (Knethaken) zu einem Teig verkneten. In Frischhaltefolie gewickelt ca. 40 Min. kalt stellen.\n2. Den Teig auf einer bemehlten Arbeitsfl√§che zu Rollen (3 cm √ò) formen und in ca. 1 cm breite St√ºcke schneiden. Die Teigst√ºcke bleistiftdick (ca. 7 cm lang) rollen und auf befetteten Backblechen zu Kipferln formen.\n3. Ein Blech in die Mitte des vorgeheizten Rohres schieben.\n\n**Ober-/Unterhitze 180 ¬∞C**\n\n**Hei√üluft 160 ¬∞C**\n\n**Backzeit: 10 Minuten**\n4. Staubzucker mit Vanillin Zucker vermischen und die noch warmen Vanillekipferl darin w√§lzen.\n\n\n## Linzer Augen\nhttps://www.oetker.at/at-de/rezepte/r/linzer-augen\n\n150 g gesiebtes Mehl\n55 g gesiebter Staubzucker\n1/2 Pck. Vanillezucker\n1/4 Pck. Zitronenschale\n1 Dotter\n100 g weiche Butter\n\n80 g passierte Marmelade (Ribisl) zum F√ºllen\ngesiebter Staubzucker zum Bestreuen\n\n1. F√ºr den Teig die Zutaten der Reihe nach in eine R√ºhrsch√ºssel geben und mit dem Handmixer (Knethaken) zu einem Teig verkneten. In Frischhaltefolie gewickelt ca. 40 Min. kalt stellen.\n2. Den Teig auf einer bemehlten Arbeitsfl√§che ca. 2 mm dick ausrollen. Scheiben (5 cm √ò) ausstechen und aus der H√§lfte der Scheiben jeweils Augen und Mund f√ºr die Oberteile. Die Scheiben auf befettete Backbleche geben.\n3. Ein Blech in die Mitte des vorgeheizten Rohres schieben.\n\n**Ober-/Unterhitze 180 ¬∞C**\n\n**Hei√üluft 160 ¬∞C**\n\n**Backzeit: ca. 12 Minuten**\n4. Die nicht gelochten Scheiben der Linzer Augen auf der Unterseite mit Marmelade bestreichen.\n5. Die Oberteile der Linzer Augen mit Staubzucker bestreuen und mit den Unterteilen zusammensetzen.\n\n## Mozartkekse\nhttps://www.reddit.com/r/Austria/comments/r9av2d/sch%C3%B6nen_zweiten_advent_hier_mit_mozartkeksen/\n\n150 g glattes Mehl\n50g Staubzucker\n1.5 Dotter,\n105 g Butter\n\nF√ºr die Creme: \n1 EL Orangensaft\n1/2 EL Honig\n35 g Marzipan \n20g geriebene Pistazien\n10 g weiche Butter\nevtl. gr√ºne Lebensmittelfarbe\nSchokokuvert√ºre\n\n1. Mehl mit dem Staubzucker mischen und dann die Butter in kleinen St√ºcken dazugeben und mit dem Dotter gemeinsam alles zu einem glatten Teig verkneten. Im K√ºhlschrank mind. eine Stunde kaltstellen. \n2. Teig auswalken und ausstechen. Bei gef√ºllten Keksen ist es immer besser, wenn die Kekse so d√ºnn wie m√∂glich sind, weils sonst halt riesig wird. I\n3. Bei 170¬∞ Hei√üluft ca. 10 min backen. Dann erkalten lassen\n4. Wenn die Kekse kalt sind, dann am besten mit einem Spritzbeutel oder sonst halt mit einem L√∂ffel die Kekse f√ºllen.\n5. F√ºr die Creme gibt man alle Zutaten in eine Schl√ºssel und mischt sie zusammen, das geht gut mit einem normalen Essl√∂ffel. Mit der gr√ºnen Lebensmittelfarbe schauts nochmal extrafein aus.\n6. Am Ende dann einfach noch die Kekse in die Kuvert√ºre tunken :)\n\n\n## Mohn Spritzgeb√§ck\nhttps://www.oetker.at/at-de/rezepte/r/mohn-spritzgebaeck\n\n50 g weiche Butter\n35 g Zucker\n40 g geriebener Mohn\nVanillezucker\n1/2 Pck. geriebene Zitronenschale\n1 Prise Salz\n1 Ei\n90 g glattes Mehl\n1/4 TL Backpulver\n\nF√ºllung:\n50 g Sauerkirschmarmelade\n1 EL Wasser\n\n1. F√ºr den Teig Butter mit Zucker, Mohn, Vanillezucker, Zitronenschale und Salz mit dem Handmixer (R√ºhrst√§be) cremig r√ºhren. Das Ei einr√ºhren. Mehl mit Backpulver vermischen, dar√ºbersieben und mit dem Kochl√∂ffel unterr√ºhren.\n2. Die Masse in einen Spritzbeutel mit Sternt√ºlle (10 mm √ò) f√ºllen und mit etwas Abstand als Kringel auf mit Backpapier ausgelegte Backbleche spritzen. Mit einem Kochl√∂ffelstiel Vertiefungen in die Mitte dr√ºcken. Das Spritzgeb√§ck ca. 2 Std. kalt stellen.\n3. Ein Blech in die Mitte des vorgeheizten Rohres schieben.\n\n**Ober-/Unterhitze 170 ¬∞C**\n\n**Hei√üluft 150 ¬∞C**\n\n**Backzeit: ca. 11 Minuten**\n4. Marmelade mit Wasser aufkochen und in die Vertiefungen des erkalteten Spritzgeb√§cks f√ºllen.\n\n\n## Aniskekse\nhttps://www.oetker.at/at-de/rezepte/r/anisboegen\n\n1 Ei\n1/2 Pck. Vanillezucker\n40 g gesiebter Staubzucker\n30 g glattes Mehl\netwas Anis\n\n1. F√ºr die Masse Eier mit Vanillin Zucker mit dem Handmixer (R√ºhrst√§be) schaumig aufschlagen. Den Staubzucker nach und nach dazugeben und cremig r√ºhren. Das Mehl dar√ºbersieben und mit dem Kochl√∂ffel unterheben.\n2. Von der Masse mit 2 Kaffeel√∂ffeln ‚Äì mit gen√ºgend Abstand ‚Äì kleine H√§ufchen auf befettete, bemehlte Backbleche geben.¬†Die H√§ufchen mit Anis bestreuen und ca. 20 Min. rasten lassen.\n3. Ein Blech in die Mitte des vorgeheizten Rohres schieben.\n\n**Ober-/Unterhitze 180 ¬∞C**\n\n**Hei√üluft 160 ¬∞C**\n\n**Backzeit: ca. 8 Minuten**\n4. Die hei√üen Kekse in kleinen Mengen aus dem Backrohr nehmen, noch hei√ü √ºber einen Kochl√∂ffelstiel biegen und erkalten lassen.\n\n\n## Salted Caramel Kekse\nhttps://www.oetker.at/at-de/rezepte/r/salted-caramel-kekse\n\nToffeemasse:\n150 g Zucker\n300 mL Schlagobers\n1.5 EL Butter\n\n200 g glattes Mehl\n75 g gesiebter Staubzucker\n1/2 Pck. Vanillezucker\n15 g gesiebtes Kakaopulver\n1 Prise Salz\n1 EL kaltes Wasser\n150 g weiche Butter\n\nZartbitterkuvert√ºre zum √úberziehen\n15 g ger√∂stete, gesalzene, gehackte Erdn√ºsse zum Bestreuen\n\n1. F√ºr die Toffeemasse Zucker in einem Topf unter R√ºhren hellbraun schmelzen. Schlagobers und Butter dazugeben und unter mehrmaligem Umr√ºhren ca. 20 Min. kochen lassen (f√ºr die richtige¬†Konsistenz, einen Kaffeel√∂ffel Masse in eine Sch√ºssel mit Eiswasser geben. Die Masse aus dem Wasser nehmen und zu einer Kugel formen. Ist die Masse noch zu weich, etwas weiter k√∂cheln lassen). Die Masse in eine Sch√ºssel geben und abk√ºhlen lassen, bis sie fest ist.\n2. F√ºr den Teig das Mehl in eine R√ºhrsch√ºssel sieben. Die √ºbrigen Zutaten der Reihe nach dazugeben und mit dem Handmixer (Knethaken) zu einem glatten Teig verkneten. In Frischhaltefolie gewickelt ca. 30 Min. kalt stellen.\n3. Den Teig auf einer bemehlten Arbeitsfl√§che ca. 3 mm dick ausrollen. Mit einem runden Ausstecher (6 cm √ò) Scheiben ausstechen und auf mit Backpapier ausgelegte Backbleche geben.\n4. Ein Blech in die Mitte des vorgeheizten Rohres schieben.\n\n**Ober-/Unterhitze 180 ¬∞C**\n\n**Hei√üluft 160 ¬∞C**\n\n**Backzeit: ca. 9 Minuten**\n5. Die H√§lfte der erkalteten Kekse bis zur H√§lfte¬†in Kuvert√ºre tunken.\n6. Die Toffeemasse in einen Spritzbeutel mit Sternt√ºlle f√ºllen und auf die nicht glasierten Kekse spritzen. Die Erdn√ºsse auf die H√§lfte der Kekse streuen. Jeweils einen glasierten Keks daraufgeben und etwas andr√ºcken.","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Best-tempeh-practice":{"title":"Best tempeh practice","content":"\n## Choice of legumes/grains\n- \"Tough\" lentils (e.g. Gotland lentils) don't make a good cake on their own, but are a good addition to other legumes that would give a too soft cake.\n- Fava beans give a starchy/meaty texture. Would benefit from mixing with something tougher (e.g. Gotland lentils).\n- Quinoa gives a very dense and chewy texture. Grows very quickly and overheats very easily! \n\n## Cooking\n- When boiling in salt water, **boil for (a lot) less than 10 min**, otherwise it gets too soggy and the legumes get too cooked.\n- ","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Cooking-tempeh":{"title":"Cooking tempeh","content":"\n# Cooking tempeh\n## Different Swedish legumes and grains\nSee [[Different legumes]] for how the tempeh was made\n\nPreparation: Put every sample (seperately) for **10 min into boiling water** (flipping once in between). Then let dry on a rack. Then fry in oil. No salt or soy sauce added this time to keep the natural taste. `‚Äî\u003e 10 min is probably too much. All samples got very soaked up, and it also cooks the legumes very much.`\n\n1. **Yellow peas**: Crunchy sides are good, quite nice. Duncan found it unpleasantly starchy. They have more own taste (beany/peay, grassy) than other samples. Taste a bit more of something than e.g. the fava beans. Nice bite. Bit starchy.\n\n2. **Gotland lentils:** Very distinct lentil taste, no chewy texture like in other samples. It's loosely packed lentils, almost no mycelium between. Starchy. `‚Äî\u003e Definitely needs to be mixed with other beans to give it a better texture. But it's a nice addition to a too smooth tempeh!`\n\n3. **Fava beans** Very juicy/moist. Potato-cake quality. Pretty good, nice mix between something slightly starchy and meaty. `‚Äî\u003e Good candidate for mixing and further experiments!`\n\n4. **Brown beans**: I don't know what happened, but they had a really unpleasant, sour taste, even though no (unpleasant) smell at all. Kind of weird. No bite. Disappointing.\n\n5. **White quinoa**: Very juicy, but very dense. No seeds distinguishable, very homogeneous. Kind of beef-like, because it's a bit too chewy. `‚Äî\u003e Definitely needs to be mixed with other beans to give it a better texture. Also, reducing the cooking time might give it a bit more defined texture.`\n\n6. Control: **Toor dal**: Very chewy, surprisingly homogenous. Kind of pork-vibe.\n\nWorst-to-best ranking:\n\n**Brown b√∂nor - Gotland lentils - quinoa - yellow peas - toor dal - fava beans.** `‚Äî\u003e Definitely work on the fava beans more, try combinations with quinoa and linser to give it a bit more bite and a nicer look. Also try additions like seaweed, chili, seeds (sunflower, pumpkin, sesame), etc.`\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Different-legumes":{"title":"Different legumes","content":"\n## Different Indian dals (2020-09-09)\n*Test: Chana dal, Toor dal, Green mung dal*\n\nStandard recipe (according to [Miso, Tempeh, Natto (Shockey)](Miso, Tempeh, Natto (Shockey)), adapted. \n- Material: Chana dal, Toor dal, Green mung dal from Indian shop, Herkulesgatan, Gothenburg. 125 g dry dal.\n- Soak: Wash and soak in water for 10h, then change water and soak for another 12 h (not necessary, but I didn't have time to cook it earlier). **Total soaking 22h.** Green mung dal had lost all its husks and was very easy to dehull. Looks just pale yellow. Toor dal and Chana dal have increased in size quite a lot and have the consistency of raw potato.\n- Cook: Chana dal and Green mung dal: **5 min**; Toor dal: **10 min**. Chana dal has a nice bite and a bit of starchyness, but good flavour. Toor dal has a nice bite, but starchy and a bit watery. `Could use less soaking or less cooking time.` Green mung dal is nicely al dente and holds together well, has lost the green shells.\n- Inoculation: 0.5 Tbsp apple cider vinegar added (**4 Tbsp/kg**), mix and return to warm pot to steam off, Then let cool down on tray and add another 0.5 tsp vinegar, mix. Add 1/4 tsp (**2 tsp/kg**) tempeh starter (_topcultures_). Spread in perforated plastic bags, incubate in cupboard above freezer. \n- Growth: Passive warming, not controlled. Start 09-09-2020, 12:00 (27¬∞C).\n\t- Toor dal: Move to room temperature after 23h, total inucubation time: **44h**.\n\t- Chana dal: Total incubation time (in cupboard): **44h**.\n\t- Green mung dal: Move to room temperature after 23h, total incubation time: **48h**.\n\n### Chana dal\nSlower to colonise than the others, so left in cupboard for much longer. More and bigger holes made, because it was wet inside the plastic bag. `Needs to be dried off better!` Nice dense, fluffy mycelium, no spores. Slightly sour and damp smell.`\n![[projects/attachments/Pasted image 20220527133616.png]]\n\n![[projects/attachments/Pasted image 20220527133323.png]]\n\n### Toor dal\nGood colonisation, got warm quickly (32¬∞C). At the end, a bit wet and slightly yeasty, alcoholic smell. More mycelium on the sides than in the middle, but nicely colonised through and through. Tiny spores in one corner.\n![[projects/attachments/Pasted image 20220527133655.png]]\n![[projects/attachments/Pasted image 20220527133718.png]]\n\n### Green mung dal\nGood initial colonisation, taken out after 23h at 34¬∞C. Mycelium took longer to get dense. At the end, very strong, sharp alcoholic smell. Not well grown in the middle. No spores visible. Doesn't smell pleasant at all. `Too small grains! It gets too dense and wet. Mix with something bigger.`\n![[projects/attachments/Pasted image 20220527133913.png]]\n\n\n## Different Swedish legumes/grains (2020-09-19)\n\n_Test: Gula √§rtor (yellow peas), Gotland linser (lentils from Gotland), Lins Anicia (lentil Anicia), Favab√∂nor (fava beans, dehulled), bruna b√∂nor (brown beans), vit quinoa (white quinoa), compare to Toor dal._\n\n- Material: **Legumes** from FRAM, Gothenburg. 125 g dry legumes/grains each.\n- Soaking and cooking (until al dente):\n\t1. Yellow peas: **Soak over night**, cook for **10 min**. Nice texture, grassy taste. Dehulling was a pain and there were weird peas that didn't get soft (~1%).\n\t2. Gotland lentils: **No soaking**. Cook for **12 min**. Nicely separated. Very good, fresh, chestnutty taste.\n\t3. Lentil Anicia: **No soaking**. Cook for **5 min**. Slightly tougher than Gotland linser, but also pleasant nutty taste.\n\t4. Fava beans: **Soak over night**, cook for **5 min**. Starchy, not a strong bean taste.\n\t5. Brown beans: **Soak over night**, dehull, boil for **18 min** `‚Äî\u003e much too long! Very mushy!` Starchy, clean taste. Dehulling was a pain, quite tough shell.\n\t6. White quinoa: **No soaking**. Rinse very thoroughly and cook for **9 min** in a lot of water. Fluffy and nice pop, slightly bitter, earthy taste, very voluminous.\n\t7. Toor dal: **Soak over night**, cook for **10 min**. \n\n- Inoculation: Drain, add 1 Tbsp apple cider vinegar (**4 Tbsp/kg**), mix and heat up in dry pan to remove moisture. Spread on clean tea towel and let dry a bit. Mix in a tub thoroughly with 1/4 tsp (**2 tsp/kg**) starter (_topcultures_). \n- Growth: \n\t- Open: Prepare 7 portions in plastic or glass jars for open incubation in sous vide immersion water bath, set to **32¬∞C** water temperature (=\"open\"). Incubation start, 19-09-2020, 21:00. Sous vide immersion cooker is very loud, but temperature in water bath was very even. Water bath shut off 22-09-2020, 8:00, for another 5 h. **Total incubation time: 40h**. Store in fridge for **2 days.**\n\t- Plastic: Prepare 7 bigger portions in perforated plastic bags for incubation above freezer (27¬∞C at the start) (=\"plastic\"). In the cupboard the temperature was varied, but once the mycelium started to take over it got VERY warm in some samples (35-43¬∞C!!). Bags put at room temperature 22-09-2020, 8:00, for another 5 h. **Total incubation time: 40h**. Store in fridge for **2 days.**\n\nResults:\n1. **Yellow peas**: Smell is quite mild, slightly mushroomy. Open: Very nice, dense little block with thick mycelium all around. Not too fluffy on top, little sporulation, mild smell. Plastic: Block is nicely dense, but a bit irregular because the peas are quite big and the bag was lying on a rack. Both: Nice to cut, but slightly fragile due to size of beans `‚Äî\u003e maybe chop a little bit before mixing with the starter?` Looks good, basically like toor dal tempeh. But a few harder peas are visible in the mix. Interesting to see how they will be when cooked/fried.\n![[projects/attachments/Pasted image 20220528094941.png]]\n![[projects/attachments/Pasted image 20220528095009.png]]\n\n2. **Gotland lentils**: Open: Very fluffy on the top and a tiny bit sporulation. Black colour is visible underneath, but that's from the lentils, not spores. Plastic: Quite dense block, no wet or empty bits. Nice to cut and looks very pretty, but the lentils start falling out of the block a bit. When boiled, quite many lentils fall out, leaving small holes in the block. Not holding together as well as e.g. brown beans. Quite brittle after boiling `‚Äî\u003e mix lentils with something else!` Both: Slightly unpleasant dank smell, similar to the quinoa samples.\n![[projects/attachments/Pasted image 20220528095038.png]]\n![[projects/attachments/Pasted image 20220528095058.png]]\n\n3. **Lentils Anicia**: Didn't develop mycelium at all, neither in bag nor in cup, and also not after \u003e 48h incubation. Discarded. `‚Äî\u003e Too tough outer shell, or did I forget the starter?`\n\n4. **Fava beans**: Slightly cheesy smell. Plastic: Bit wet and some bigger beans are exposed and touching the plastic and they got sticky-shiny and smell cheesy `‚Äî\u003e dry the beans better next time and cook less!` Cut structure is not bad, but there are wet beans visible that turned brown and funky. Throw away. Open: Irregular surface of beans with some fluffy mycelium growing up, some sporulation. When cut quite crumbly, because beans are quite big. Spores are also inside, probably because of air pockets `‚Äî\u003e press better together and maybe cover with something. Also chop a bit smaller next time.` Smell of open sample not unpleasant, so the smell comes really from the exposed beans-on-wet-plastic in the plastic bag sample.\n![[projects/attachments/Pasted image 20220528095210.png]]\n![[projects/attachments/Pasted image 20220528095234.png]]\n\n5. **Brown beans**: Plastic: Nice very white, dense block. Slight ammonia smell! Or slightly sour smell Not as unpleasant as the lentils and the quinoa. Smells fresher. Open: No ammonia smell, just fresh, almost grassy. Beans are a bit loose and irregular on the top, mycelium fluffy but no spores. Both: No unpleasant smell inside when cut at all. Very mild and neutral. Beans are very white. Good block, holding together well. Not wet, no air pockets.\n![[projects/attachments/Pasted image 20220528095320.png]]\n![[projects/attachments/Pasted image 20220528095914.png]]\n\n6. **White quinoa**: Got the hottest and developed mycelium the fastest. The open incubation even started sporulating (not the case for any other substrates). Plastic: Big non-mycelium spot in the middle with unpleasant smell and colour. It's sticky and slimy ‚Äî\u003e remove! `‚Äî\u003e Dry the grains more and mix with something bigger to avoid too dense cake.` The nice parts have a slighly animal and rotten smell, not entirely pleasant. Nice dense cake in most parts, but e.g. the corners of the plastic bag are not as dense and a bit wet and smell more sharp (ethanol, ammonia). Open: Nice, dense cake, but a lot of fluffy, sporulating mycelium on top `‚Äî\u003e incubate for a shorter time!` Smell of open is less unpleasant and more mushroomy than the plastic bag `‚Äî\u003e Maybe quinoa needs a LOT of air.`\n![[projects/attachments/Pasted image 20220528095423.png]]\n![[projects/attachments/Pasted image 20220528095440.png]]\n\n7. **Toor dal**: Plastic. Very nice dense cake with thick, smooth, white mycelium all around. Open: Fluffy top with slight sporulation, otherwise similar density to plastic. Both: Smells of almost nothing, very mild. Nice mycelium throughout, no wet or non-grown spots. Perfect tempeh.\n![[projects/attachments/Pasted image 20220528095558.png]]\n![[projects/attachments/Pasted image 20220528095616.png]]\n\n\n\n## Fava beans + additions (2020-09-30)\n_Test: Addition of things that give more texture to Fava bean tempeh: Sunflower seeds, sesame seeds._\n\nRecipe from [tempeh.info](http://tempeh.info): Soy+sunflower seeds: normal soy tempeh, but substitute 100-200 g of beans with sunflower seeds. No soaking, just add them at the start of the bean cooking process. Soy + sesame: Roast 50 g sesame seeds until brown. Mix with cooled, cooked beans.\n\n- Material: 220 g dry **favabeans**.\n- Soaking and cooking: **No soaking,** cook for **20 min** until al dente (377 g after cooking). \n- Inoculation: Steam out, add 1 Tbsp vinegar (**4 Tbsp/kg**) and after cooling 1/2 tsp _Topcultures_ starter (**2 tsp/kg**).\n\n- Material: 40 g dry **Gotland lentils**.\n- Soaking and cooking: **No soaking**, cook for **12 min** (72 g after cooking).\n\n- Material: 36 g dry **sunflower seeds**.\n- Soaking and cooking: **No soaking**, cook for **5 min** (49 g after cooking).\n\n- Material: 29 g (3 Tbsp) toasted **white sesame seeds**\n\nCombinations\n1. 125 g cooked fava beans + 29 g toasted sesame seeds.\n2. ","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Dill-pickles":{"title":"Dill pickles","content":"\n![[projects/attachments/Screenshot 2022-06-10 at 20.05.47.png]]\n\nRecipe: [Vegetable recipes - Dill pickles](projects/fermentation/Vegetable%20recipes.md#Dill%20pickles)\n_2022-04-20:_\nNot as acidic and sweet as sm√∂rg√•sgurkar, but still nice flavour. More complex and earthy. The dill definitely comes through. In the beginning (after a few days fermentation at RT and then 1-2 weeks in the fridge) the inside of the cucumbers was still light green and they tasted quite fresh. But after 1 month in the fridge the liquid has penetrated the whole cucumber and they taste really nice. To stay crunchy, I added 2 bay leaves to the brine during fermentation, which seems to have worked. \n\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Fermented-vegetable-production":{"title":"Fermented vegetable production","content":"\n![](projects/attachments/Fermentation%20station.jpg)\n\n[Fermented carrot and parsely root](Fermented carrot and parsely root)\n[Hungarian celeriac kraut](Hungarian celeriac kraut)\n[Dill pickles](Dill pickles)\n[Fennel with mint and lemon](projects/fermentation/fennel_mint_lemon.md)\n[Fermented Turkish peppers](projects/attachments/Fermented%20Turkish%20peppers.jpg)\n[UFO peaches](projects/fermentation/UFO_peaches.md)\n[Vietnamese carrot and daikon radish](projects/fermentation/vietnamese_carrot_daikon.md)\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Hungarian-celeriac-kraut":{"title":"Hungarian celeriac kraut","content":"\n![[projects/attachments/Screenshot 2022-06-10 at 20.07.12.png]]\nRecipe: [Vegetable recipes - Hungarian celeriac kraut](projects/fermentation/Vegetable%20recipes.md#Hungarian%20celeriac%20kraut)\n_2022-03_:\nNice mild heat from the peppers, and the fermented celeriac gets a nice sharp-acidic flavour that goes well with the celeria taste. The caraway is nice to give it the feeling of a complete dish.\nGoes surprisingly nice with rice, esp. when mixed in. Good with tofu and laoganma.\nNext time, **shred the celeriac much coarser**. I shredded it waaay too finely (in the food processor - big mistake). Would be more satisfying to eat if it was bigger chunks.\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Koji-recipes":{"title":"Koji recipes","content":"\n## What koji needs\nFrom [https://www.fermentationculture.eu/what-koji-needs/](https://www.fermentationculture.eu/what-koji-needs/)\nTemperature: **28-36C**. At lower temperatures: more proteases, at higher temperatures: more amylases.\n\nRelative humidity: 90% Spray with water if necessary\n\nSubstrate: rice, barley, soy, wheat etc. Substrate shouldn't be wet after cooking, but rather dry. Best is steaming (unless for shoyu, then cooking is better).\n\nAfter inoculation, stir for the first time after 24h, then every 4 hours or so.\n\nRice koji can be ready after 40 h, barley koji can take up to 50 h. Stop before (or when) spores develop (yellow-green spots). Cool the grains in the fridge or outside in a thin layer.\n\n\n## Different kojis\n### Barley koji\nFrom [https://thejapanstore.jp/blogs/column/how-to-make-barley-koji](https://thejapanstore.jp/blogs/column/how-to-make-barley-koji)\n\n_Barley miso made with barley koji has a lighter taste than rice miso made with rice koji._\n\n1. Wash barley ‚Üí soak in water (1h) ‚Üí drain water (30 min)‚Üí steam barley wrapped in cloth (45 min)‚Üí spread out and cool down to 40C. \n2. Sprinkle koji starter on cooked and cooled-down barley, mix well ‚Üí wrap in cloth together as small as possible. \n3. Incubate (**30-35C**) for 18-20 hours, then separate the clumps that have formed. Keep for another 5-6 h, separate clumps again. Keep for another 20ish h (**total: 45ish h**)‚Üí completion when it smells like chestnut.\n\n\n### Bread koji\nSee [Koji recipes - Bread aminos](Koji recipes#Bread aminos)\n\n\n### Rice koji\nFrom [Miso, Natto, Tempeh (Shockey)](Miso, Natto, Tempeh (Shockey))\n\n- 525 g rice\n- 20 g rice flour\n- 1 g (1 tsp) koji starter\n\n1. Cook (steam) rice to al dente consistency, then spread out into casserole for cooling. \n2. Toast the flour in a pan for 5 min, cool down. When flour is cooled, mix koji spores in. When rice is below 40C, mix koji flour in.\n3. Cover dish with plastic wrap (+ holes) or moistened cheese cloth.\n4. Incubate at 30C. Check internal temperature every few hours, should be 27-35C.\n5. After 24h, sweet smell. Check temperature. Stir and break up lumps. Make furrows to dissipate heat.\n6. After around **40 h in total**, rice koji is ready.\n\n\n### Oat koji\nFrom [Miso, Natto, Tempeh (Shockey)](Miso, Natto, Tempeh (Shockey))\nLike rice koji, but use 3 cups of oat groats instead. Soak groats for 6-8h, then steam until al dente. Follow the rice koji instructions.\n\nNice oatmeal cookie smell when done.\n\n\n### Barley koji\nFrom [Miso, Natto, Tempeh (Shockey)](Miso, Natto, Tempeh (Shockey))\nMore prone to overheating! Nutty chestnut aroma when done. Will look less fuzzy than rice koji.\n\n- 1225 g pearled barley\n- 35 g wheat or rice flour\n- 2 g (2 tsp) koji starter\n\n1. Soak barley 6-8 h, drain and rinse. Steam for 1.5 hours or boil for 1h. Barley is done when the kernels are soft all the way through but not mushy. Drain and spread out on a drain to cool to below 40C.\n2. Toast the flour for 5 min, cool down. Add koji spores to cooled flour, mix well. \n3. Sprinkle koji flour on barley, mix very well.\n4. Put everything into a deep dish, cover with cling film (+ holes) or moistened cheese cloth.\n5. Incubate at 30C, check internal temperature every few hours (should be 27-35C).\n6. After 24-36h, surface growth and sweet, mushroomy smell. Monitor heat closely, stir and break up lumps, make furrows to dissipate heat. Adjust moisture if needed.\n7. After about **40 h total**, incubation is done.\n\n\n## Shoyus and aminos\n### Soy-wheat shoyu\nFrom [https://www.fermentationculture.eu/how-to-make-soy-sauce/](https://www.fermentationculture.eu/how-to-make-soy-sauce/):\n\nTraditional recipe: wheat berries/matvete (from soft wheat, not durum)= whole wheat kernel with bran, germ, endosperm but without the husk + soy beans.\nVariations: Use oats or barley instead of wheat, and lentils or chickpeas instead of soy beans.\n\n#### Ratio soy:wheat (legumes:grains): \n- Traditional **1 part dry soy, 1 part dry wheat** (by weight). \n- A bit more wheat: 1 part soaked soy, 1 part dry wheat. _The less wheat you use, the longer the sauce will have to ferment._\n\n#### Preparation:\n1. **Roast** the wheat berries in the oven until they are golden brown. Mill them in something like a coffee grinder on the coarsest setting or a food processor.\n2. **Soak** soy beans over night. (Soy beans will increase 2.3X when soaked, so calculate how much dry beans to use!)\n3. **Cook** soy beans for at least 40 min, until you can easily squeeze them between your fingers. Strain them and let steam a bit.\n4. **Mix** the steamy beans with the milled wheat (so the dry wheat soaks up the excess moisture). If it seems too wet, add more wheat. If it's too dry, spray some water onto it, or add more beans (if you have). Crush some of the soy beans with your hands.\n\n#### Inoculation:\n1. Dilute the spores, so they are easier to handle, with some flour.\n2. Check that **soybean/wheat mixture** has cooled down to below 40C. Spread spores over the mixture (e.g. with a tea strainer). Mix well.\n3. Line a pyrex dish with damp piece of cloth. Spread your mix into the dish. Cover with another moistened cloth. Put cling film over the dish, poke some holes in.\n4. Incubate (at **30C**) and keep a close eye on the temperature inside the koji, it can overheat very easily.\n5. After 24h, stir the mixture. Moisten the top cloth again if necessary. Put cling film back on and continue incubation. If koji overheats (\u003e37C) a lot, you have to stir a lot. Spread out in a thinner layer and turn off oven!\n6. After another 12h (**36h in total**) you should see a lot of growth. It shouldn't sporulate, but it's not the worst if it does a bit.\n\n#### Fermentation:\n1. Prepare a **15% brine**: 150 g of uniodised salt + 850 g of water. (You'll need about 1.65x the dry ingredients weight in brine weight).\n2. Clean your fermentation vessel well and pour in the koji.\n3. Pour the brine over the koji until the koji is covered. Let it soak for 1-2h. Pour some more brine until koji is covered again. Stir. You might have to add more brine over the next few days to keep the koji covered.\n4. Optional: Stir in a few tea spoons of unpasteurised miso to introduce beneficial bacteria.\n5. During the first **2-3 weeks, stir daily**. A lot of gas will be produced during that time that carry up solids to the surface. Push them down again so they don't get mouldy.\n6. Once your shoyu has settled down and is less active, reduce stirring to once every other day.\n\n#### Pressing:\nAfter **3-12 months**, put a cheese cloth into a sieve or colander, pour the fermentation mash in, cover with a cloth and put a weight on top. Let press over night. (Or use a cider press if you have one).\n\n#### Bottling:\n1. Clean bottles well, sterilise in oven (cover with aluminium foil, keep at 160C for at least 30 min, let cool down over night). Boil bottle caps in water.\n2. Heat the shoyu to 90C to kill off moulds and bacteria, but don't boil it! Pour the shoyu into the bottles and cap.\n\n\n### Bread aminos\nFrom [Miso, Natto, Tempeh (Shockey)](Miso, Natto, Tempeh (Shockey))\n\n#### Ingredients:\n- 680 g bread\n- 70 g all purpose or rice flour\n- 1 g (1 tsp) koji starter\n- 1.9 L water\n- 100 g for a 5% salt solution or 165 g for a 8% salt solution\n\n#### Instructions:\n1. Break bread into small pieces and place in a bowl.\n2. Toast the flour in a pan over medium heat until slightly browned (5 min). Remove and let cool, then combine with koji spores.\n3. Mix koji-flour with bread cubes. Distribute very well.\n4. Transfer the inoculated bread to a casserole dish, cover with cling film and poke a few holes in.\n5. Set incubator to **30C** and place the pan in there. Check the internal temperature every few hours, it **should be 27-35C**.\n6. After 20-24h, you should notice a sweet smell. Stir the bread pieces, then continue to incubate for another 20-30h.\n7. When the koji is done, place everything into a glass jar. Boil the water with the salt and cool down to below 50C. Pour the brine onto the bread koji and mix thoroughly.\n8. Seal the jar with a lid and let sit at warm RT (27-29C) for 24h. Stir a few times during.\n9. Let mixture sit at regular RT for a week. Open the jar to release gases, stir at least once a day. After a week, the ferment should have settled down. When it's no longer active, seal the container and let it **age at RT for at least 6 months**.\n10. When you're ready to use the amino sauce, strain out the bread solids (or blend into a thicker sauce). Use the liquid for seasoning. Store in the fridge (because of low salt content).\n\n### Oat residue aminos\nAdapted from bread aminos (Shockey recipe) \nMade 2021-10-16 [Oat residue aminos](Oat residue aminos)\n\n\n#### Ingredients:\n- 430 g dried oat residues (dried in oven at 50C for a day, from 1 kg fresh oat residue)\n- 44 g rice flour\n- 1 tsp **barley koji starter** (LUVI Ferments)\n- 1.2 L water\n- 63 g uniodised salt\n- 1 Tbsp seed miso\n\n#### Instructions:\n1. Toast rice flour. Cool down to below 40C, then add about 1/5 of one bag of barley koji starter (whole bag is for 5 kg substrate).\n2. Disinfect a big bowl with Starsan and add the dried oat residues. _It feels rubbery, but not quite damp enough, so carefully add a little bit of water. Add 70 g of water and mix thoroughly with hands. Feels like a good dampness now._\n3. Mix in the flour koji starter with a tea strainer. Mix very thoroughly. _Oats feel quite dry again due to the flour, so add 100 g more water and mix._\n4. Pack into a Pyrex dish lined with a damp tea towel. Cover the oats with the tea towel, stick a thermometer in and cover with cling film + holes.\n5. Incubate at around **30C** until koji has grown nicely, but not sporulated (approx. **48h**).\n6. Place oat koji into a bowl, pour the (cooled down) brine onto it and mix throughly. Place in a large glass jar and leave at RT, stir occassionally for the next 2 weeks. _Mould forms on top over and over again, which looks exactly like koji mould ‚Äî\u003e remove regularly and try to weigh down the solids to keep everything submerged (it‚Äôs hard, since the oat residue is very fine)._\n7. After about 2 weeks at RT in the open glass jar, divide between small plastic tubs with screw-top lids, fill completely to the brim and seal. Now leave at RT for up to 12 months.\n8. Strain away the solids and filter the liquid. Store in fridge until use. Use as flavouring agent when cooking.\n\n\n## Misos\n### Barley + fava miso\n1. Cook fava beans until they still have a bit of bite to them. \n2. Prepare barley koji (**48ish h**). Grind up equal amounts of fava and barely koji and mix with salt (10-ish%?). Put in jar, cover and leave for 6 months.\n\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Miso-Tempeh-Natto-Shockey":{"title":"","content":"","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Oat-residue-aminos":{"title":"Oat residue aminos","content":"\n(photo)\n\nRecipe: [Koji recipes - Oat residue aminos](projects/fermentation/Koji%20recipes.md#Oat%20residue%20aminos)\n\n### 2021-10-16\n#### Incubation procedure:\n- 2021-10-16: 20:00 Internal start temp: 24 C. Oven start temp: 28C.\n- 2021-10-17: 08:00 Internal temp: 30 C. Oven temp: 28-29C.\n\t- 10:00 internal temp: 32c\n\t- 14:00 internal temp: 33c\n\t- 16:00 internal temp: 35c. Take out of oven and place on counter top.\n\t- 17:00 internal temp: 36c. Mix, break apart clumps and transfer to bigger baking sheet, lined with damp kitchen towel.\n- 2021-10-18 19:00, **48h**: internal temp 38c. Strong sweet-mouldy smell. Harvest.\n\n#### Result:\n29-01-2022, **3 months at RT**: Take 2 of the jars, and open. \n_Pleasant smell and taste, no mould, only little white settlement (yeast?) on the bottom._ Drain and sieve the contents with coffee filters, heat up to boiling point in a pot, then leave for 5 min. Boil a glass jar and fill the hot liquid into it. Store in fridge = 3 month sample. \nAfter another 3 months, I strained the liquid again through a coffee filter, since it has a cloudy/floury part that settles on the bottom that doesn‚Äôt look so nice.\n\n20-04-2022, **6 months at RT**: Harvest all jars.\n_Pleasant smell, no mould but some liquid has pushed through the screwed-on lids (needs to be incubated in a tub, and not hermetically sealed!). Quite a lot of white, yeast-y looking settlement in the jars._\nDrain and sieve contents, heat up to boiling point, then fill into jars. The 3 months samples have actually accumulated quite a lot of white settlement, so combine with the 6 months samples.\n\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Soybean-tempeh":{"title":"Soybean tempeh","content":"\n## Standard dehulled soybean tempeh (2020-08-25)\n*Test: Tempeh starter, inoculation time, inoculation method*\n\nStandard recipe (according to [Miso, Tempeh, Natto (Shockey)](projects/fermentation/Miso,%20Tempeh,%20Natto%20(Shockey).md). Cupboard above fridge vs. waterbath with immersion heater.\n- Material: Soybeans from Indian shop, Herkulesgatan, Gothenburg: 25 SEK/kg **500 g dry soy beans**\n- Soak: Soak in water for 8h, dehull. Soak in water for another 8 h (**total soaking 16h**). \n- Cook in water for **50 min,** cool down, steam off. \n- Inoculation: Add 2 Tbsp (**4 Tbsp/kg**) apple cider vinegar, mix. Blow dry with hair dryer. Mix with 1 tsp (**2 tsp/kg**) tempeh starter (*topcultures*). Spread in tray or in perforated plastic bag.\n- Growth: \n\t- Above fridge in perforated plastic bag. Start: 25-08-2020, 10:00. End: 26-08-2020, 17:00. **31 hours** **incubation**. Temperature was about **30¬∞C**. Opened door at ~9:00 since it was at 32¬∞C.\n\t- In non-stick tray floating in waterbath, heated with immersion sous-vide cooker. Start: 25-08-2020, 10:00. End: 26-08-2020, 17:00. **31 hours incubation**. Temperature was set to **31¬∞C**, then to 32¬∞C at 20:00. Turned off at 9:00.\n\n`Cupboard-incubated: Didn't grow as fast in the beginning as the waterbath-incubated one, but caught up in the end. Very homogeneous growth, very nice dense block. Passive warming, not as controlled. `\n\n![[projects/attachments/Soybean tempeh 01.png]]\n\n`Waterbath-incubated: Grew faster. Fluffy top, very nice dense block. Don't use nonstick pan, the tempeh took off the coating! Use stainless steel next time! Immersion sous vide was quite loud, esp. over night.`\n![[projects/attachments/Pasted image 20220527131717.png]]\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Tempeh-experiments":{"title":"Tempeh experiments","content":"\n## Different beans\n\n[Soybean tempeh](projects/fermentation/Soybean%20tempeh.md)\n[Different legumes](projects/fermentation/Different%20legumes.md)\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Tempeh-links":{"title":"Tempeh links","content":"\n[Images of larger-scale tempeh production (Tempehting):](https://tempehting.com/tempeh-fabriek)\n![[projects/attachments/Tempeh larger scale.png]]\n\n\n[The Book of Tempeh (1977, Google Books)](https://books.google.se/books?id=hdKzFlaqWT8C\u0026printsec=frontcover\u0026redir_esc=y#v=onepage\u0026q\u0026f=false)\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Turkish-peppers":{"title":"Turkish peppers","content":"\n![](projects/attachments/Fermented%20Turkish%20peppers.jpg)\n\nRecipe: [Vegetable recipes - Turkish peppers](projects/fermentation/Vegetable%20recipes.md#Turkish%20peppers)\n\n_2022-07-25:_\n48h: Liquid starts to get a hint of cloudiness. Bit of bubbling going on. Pepper tastes crunchy and slightly salty, not sour yet.","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/UFO_peaches":{"title":"UFO peaches","content":"\n![](projects/attachments/Fermented%20peaches.jpg)\n\nRecipe: [Vegetable recipes - UFO peaches](projects/fermentation/Vegetable%20recipes.md#UFO%20peaches)\n\n_2022-07-25:_\nBought \"UFO peaches\" from Hemk√∂p (grown in Spain), 29.90 SEK for 500 g. Washed and cut each into 8 chunks. \n24h: Liquid is already cloudy, but no sour taste yet.\n48h: Cloudier. Bubbles appearing. Fruit tastes just sweet, peachy and a bit salty.\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Vegetable-recipes":{"title":"Vegetable (and some fruit) recipes","content":"\n## Fermented daikon radish\n[https://www.fermentingforfoodies.com/fermented-radishes-for-a-delicious-snack/](https://www.fermentingforfoodies.com/fermented-radishes-for-a-delicious-snack/)\n- Daikon radish\n- Beetroot (optional)\n- 2 cups (473 mL) of water + 2 tsp (12 g) of salt = **2.5 g salt per 100 mL water**\n\nWash, peel and slice large daikon radish into 1 cm thick slices. Pack into a jar, together with a few slices of beetroot if you want a pink colour. NB: the beet root will make everything nicely pink, but also give everything an earthy, beety note.\n\nMix 2 cups of water with 2 tsp of salt. Fill up the jar with the vegetables and weigh down so the vegetables are under the liquid. With a loose lid, keep at RT for 3-5 days and observe fermentation. Taste regularly. When sour enough, store in the fridge.\n\n## Japanese pickled cucumbers\n[https://okonomikitchen.com/japanese-pickled-cucumbers/](https://okonomikitchen.com/japanese-pickled-cucumbers/), adapted\n\n_Very good and quick to make! Not fermented, but pickled. Tasty with rice or on sandwiches. Almost obscenely umami, because it contains so much soy sauce. You can also add bell pepper to the cucumber (or other similar vegetables)._\n\n- 500g cucumber\n- 1 tsp salt\n- 150g soy sauce\n- 1 Tbsp rice vinegar\n- 40g sugar\n- 30g ginger\n- 1 red chili pepper\n\nChop cucumber into 1 cm thick slices. Mix with salt in a bowl and let sit for 30 min.\n\nFinely slice ginger and chili. Add to soy sauce, vinegar and sugar in a saucepan. Heat up and simmer until the sugar has dissolved. Pour out the cucumber water and press a bit, then pat the slices a bit dry with a paper towel. Add to the saucepan with the soy sauce mix. Let simmer for 5 min, then let cool down. Fill into a jar and store in the fridge. Consume within approx. 10 days.\n\n## Curtido Rojo\nShockey ‚ÄúFermented vegetables‚Äù, p121\n\n- 1/2 head of cabbage (red or green), finely sliced\n- 1 beet, peeled and shredded\n- 115 g green beans, sliced in 1 cm pieces\n- 2 cloves garlic, minced\n- 1 fresh jalapenos, seeded and minced\n- 1/2 tablespoon cumin seed\n- 1/2 tablespoon grated orange or lime zest\n- 1/2 tablespoon dried oregano\n- 1/4 teaspoon red chili flakes\n- 1 tablespoons unrefined sea salt\n- 2 bay leaves\n- Optional: 1 carrot, thinly sliced\n- Optional: 1 onion, thinly sliced\n\nMassage the salt and spices into the cabbage and vegetables, like for Sauerkraut. When the brine has developed and is ready to pack, lay the bay leaves in the bottom of a approx. 2 L vessel, pack tightly.\n\n## Beet kvass\nShockey ‚ÄúFermented vegetables‚Äù, p125\n- 700 g beets, peeled\n- 950 mL water\n- 2 teaspoons salt\n\nChop the beets into 1 cm pieces and but them in a 2 L vessel. Add water to fill and mix in the salt. Cover loosely. Set aside on a baking sheet to ferment, out of direct sunlight, in a cool spot for 5-7 days, stirring daily.\n\nStart tasting the liquid on day 5. If you want something more like a vinegar, ferment for 1 week longer.\n\n\n## Vietnamese pickled carrot and daikon\nShockey, ‚ÄúFermented vegetables‚Äù, p150\n_Made 2022-03:_ [Fermented carrot and parsley root](projects/fermentation/fermented_carrot_parsley.md)\nMade 2022-07-25: [Vietnamese pickled carrot and daikon](projects/fermentation/vietnamese_carrot_daikon.md)\n\n- Brine: 1/4 cup (68 g) salt, 2.2 L water (= **3 g salt per 100 mL water**) + 1/2 tablespoons sugar per L\n- 450 g carrots, peeled and julienned\n- 450 g daikon radish, peeled and julienned\n- Optional: add a few lemon slices to the jar\n- Optional: vine leaf\n\nAdd salt and sugar to water to prepare the brine.\n\nArrange the carrots and daikon in a jar, cover with the brine. Keep leftover brine in the fridge to fill up the jar if needed. Top off with vine leaf to keep the smaller vegetable chunks submerged.\n\nTop with a weight to keep the vegetables down, cover loosely.\n\nSet aside on a baking sheet to ferment, out of direct sunlight in a cool spot for 7-14 days. Top up with reserved brine if necessary.\n\nWhen the brine starts to get cloudy, start tasting. They are ready when they are pleasingly sour and pickle-y tasting, without the strong acidity of vinegar.\n\nStore in jars, with lids tightened, in the fridge. These will keep refrigerated for \u003e 12 months.\n\n\n## Hungarian celeriac kraut\nShockey, ‚ÄúFermented vegetables‚Äù, p158\n_Made 2022-03:_ [Hungarian celeriac kraut](projects/fermentation/Hungarian%20celeriac%20kraut.md)\n- 450 g celeriac, shredded\n- 2-3 Hungarian wax peppers, thinly sliced\n- 1/2 tablespoon caraway seeds\n- 1/2 teaspoon ground paprika\n- 1/2 teaspoon salt\n\nIn a large bowl, combine the celeriac with the salt and massage well, then taste. It should taste slightly salty without being overwhelming. Add more salt if necessary, until it‚Äôs to your liking. The celeriac will become limp and liquid may begin to pool.\n\nTransfer a few handfuls at a time into a large jar, press down on each portion to remove air pockets. You should see some brine on top when you press. When the vessel is packed, leave a few centimers head space. Top with a weight and cover loosely.\n\nSet aside on a baking sheet to ferment, out of direct sunlight in a cool spot for 5-10 days. Check daily to make sure the celeriac is submerged, pressing down as needed to bring the brine back to the surface.\n\nStart tasting the kraut after 5 days. It‚Äôs ready when it‚Äôs pleasingly sour. The texture will be softer than cabbage-based kraut.\n\nWhen the kraut is ready, store it in jars, with lids tightened, in the fridge. It will keep like that for \u003e12 months.\n\n## Dill pickles\nMade 2022-04-20: [Dill pickles](projects/fermentation/Dill%20pickles.md)\n\n## Fermented lotus root\nAdapted recipe from [Vietnamese pickled carrot and daikon](projects/fermentation/Vegetable%20recipes.md#Vietnamese%20pickled%20carrot%20and%20daikon)\n_Made 2022-06-26: **Did not work! No growth, despite the fact that I added an unpeeled carrot.The lotus roots were too sterile/preserved to allow any bacterial growth... Despite the fact that I added an unpeeled carrot.**\n\n- 3% Brine: **3 g salt per 100 mL water** + 1 Tbsp sugar per 1L water\n- 500 g fresh lotus root (slices and preserved in water, salt and ascorbic acid, bought at Asian Shop Helsingborg)\n- 1 organic carrot, unpeeled but washed, cut in strips _(mostly to inoculate with some lactic acid bacteria, since the lotus root is preseved and boiled)_\n\nBoil the lotus root slices in water for 15 min.\n\nAdd salt and sugar to water to prepare the brine.\n\nArrange the cooked and rinsed off lotus root slices as well as the carrot strips in a jar, cover with brine. Cover with grape leave and weigh down so everything is under brine. \n\nWhen the brine starts to get cloudy, start tasting. They are ready when they are pleasingly sour and pickle-y tasting.\n\n\n## Fennel with mint and lemon\nInspired by https://farmsteady.com/blogs/field-guide/recipe-fennel-lemon-mint-kraut\nMade 2022-07-25: [Fennel with mint and lemon](projects/fermentation/fennel_mint_lemon.md)\n\n- 1 fennel bulb\n- 8 mint leaves\n- 1 lemon, scrubbed and thinly sliced, seeds removed\n- vine leaf (optional)\n\nBasic **3%** vegetable brine: 1000 mL water + 30 g salt \n\nCut fennel into large chunks. Arrange vegetables in jar and place the lemon slices and mint leaves around the outside. Cover with 1 vine leaf and weigh down so everything's submerged. Leave at RT for a few days.\n\nWhen the brine starts to get cloudy, start tasting. When sour enough, discard the lemon slices and mint leaves, transfer to jar with a lid and place in the fridge.\n\n## UFO peaches \nInspired by [The Noma Guide to Fermentation](projects/fermentation/noma_guide.md) and https://www.tyrantfarms.com/how-to-make-lacto-fermented-fruit-with-recipes/\nMade 2022-07-25: [UFO_peaches](projects/fermentation/UFO_peaches.md)\n\n- 300 g of UFO peaches, cut into bite-sized chunks\n- vine leaf (optional)\n\n2% salt of total fruit weight = 6 g salt\n\nPut the salt and fruit pieces in a jar and fill up with water until all fruits are covered. Stir with a chop stick. Cover with a vine leave, weigh down with a weight so everything is submerged. Leave standing at room temperature, taste every day until it has a pleasant taste.\n\n\n## Turkish peppers\n- 500 g Turkish (or Hungarian) peppers\n- vine leaf\n\nBasic **3%** vegetable brine: 1000 mL water + 30 g salt \n\nCut peppers into bite-sized chunks. Arrange vegetables in jar and fill up with brine until everything is covered. Top off with 1 vine leaf and weigh down so everything's submerged. Leave at room temperature for a 7-14 days. When it has a nice pickel-y taste, it's ready for eating (or storing in the fridge).\n\n\n## Sauerkraut\n### Mama's Sauerkraut (Tupperware)\n- 10kg gehobeltes Kraut\n- 80g Salz (= 8g/kg)\n- 200g Milchzucker\n- K√ºmmel, Wacholder\n\nGut mischen bis Saft entsteht. In K√ºbel dr√ºcken bis Saft dar√ºber steht. Deckel regelm√§√üig l√ºften (1-14 Tage, RT). Nach 14 Tagen k√ºhl stellen und fest verschlie√üen. Saft sollte immer √ºber Kraut stehen. Wenn notwendig mit Salzwasser (1L + 1 EL Salz) auff√ºllen.\n\n### Sauerkraut von Chefkoch.at\n- 10kg Wei√ükraut\n- 120 Salz (= 12g/kg)\n- 20g K√ºmmel\n- 10g Dillsamen\n\nFein hobeln, mit Salz vermischen, kneten bis Saft rauskommt. Gl√§ser auskochen, Sauerkraut einf√ºllen, mit Frischhaltefolie abdecken. In Wanne stellen, 3-6 Tage in der K√ºche, dann im Keller. 14-21 Tage, dann K√ºhlschrank.\n\n### Mama's Sauerkraut im Tontopf\n- 10kg Wei√ükraut\n- 50-100g Salz (= 5-10g/kg)\n- K√ºmmel\n\nKrautschnitzel und Salz schichten. Stampfen bis Saft √ºbersteht, Topf mit sauberem Geschirrtuch abdecken. Gewichte drauf. Saft sollte in jedem Fall √ºber Kraut stehen. Tuch, Deckel und Gewichte 1x pro Woche reinigen. Bei zu wenig Fl√ºssigkeit einfach mit Salzwasser auff√ºllen. K√ºhl lagern, 4-6 Wochen.\n\n### Sauerkraut von O√ñ Nachrichten\n- 1 kg Wei√ükraut\n- 8-15 g Salz (= 8-15 g/kg)\n- 1 EL K√ºmmel\n- 4-5 Wacholderbeeren\n- 1-3 Weinbl√§tter\n- Krautbl√§tter zum Abdecken\n\nKraut waschen, 1-2 gro√üe gr√ºne Krautbl√§tter zum Abdecken beiseite legen. Strunk herausschneiden, Kraut hobeln. In einer Sch√ºsesel mit Salz und Gew√ºrzen vermischen, gut durchkneten/stampfen. Handvoll f√ºr Handvoll in ein Glas f√ºllen und gut zusammenpressen. Beim Dr√ºcken soll Lake sichtbar werden und √ºber dem Kraut stehen. Das Kraut mit Krautbl√§ttern abdecken, beschweren, abdecken. 3-7 Tage bei Zimmertemperatur (18-23¬∞C), dann 2 Wochen bei ca. 15¬∞C fermentieren lassen. Anschlie√üend am besten in den Keller (5-10¬∞C) stellen. Nach 4-6 Wochen ist das Sauerkraut fertig.\n\n[https://www.ift.org/news-and-publications/food-technology-magazine/issues/2020/november/columns/food-safety-and-quality-innovations-in-vegetable-fermentations](https://www.ift.org/news-and-publications/food-technology-magazine/issues/2020/november/columns/food-safety-and-quality-innovations-in-vegetable-fermentations?MessageRunDetailID=3805240652\u0026PostID=21842965\u0026utm_medium=email\u0026utm_source=rasa_io): CaCl2 as salt replacement, starter cultures and right conditions makes fermentations finish in 5 days.\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/Yogurt-production":{"title":"Yogurt production","content":"\n## Dairy \u0026 soy\n### Vege052 and Vege092 starter cultures\n_2022-05-05_\nStarter cultures: **Vege 053**, **Vege 092**\nSubstrates: Fresh dairy milk (3% fat), Alpro soy milk (1.8% fat)\n\n**Scalding**: Heat up milks to approx. 90¬∞C on the stove, leave for a minute, then pour into prepared jars and cool down in a water bath.\n**Starter culture**: Pour a bit of the freeze-dried starter culture (fraction of 1/4 tsp) into 10 mL of water, shake. Use approx. 1.5 mL of that to inoculate each jar.\n\n![[projects/attachments/Screenshot 2022-06-06 at 09.21.35.png]]\n![[projects/attachments/Screenshot 2022-06-06 at 09.21.46.png]]\n\n![[projects/attachments/Screenshot 2022-06-06 at 09.21.54.png]]\n\n**1st fermentation**: ==8h, 40¬∞C== (in the rice cooker)\nVege 053 yogurts are much firmer than 092 ones. For dairy, both are firm, but for soy the 092 is still liquid after 8h. The acidity is quite low in all of them, although dairy 053 is quite pleasant. Soy 053 is very mild and vanilla-y. \n\n**Tasting at room temperature**\nContinue fermentation over night in the turned-off rice cooker: ==10h, 40¬∞C-RT== (=18h in total).\nAll yogurts are firm now, to differing degrees. Stir before tasting.\n- Dairy 053: Quite runny. Nice mellow acidity without sticking out too much. No off-flavours. **Duncan's favourite** (\"Tastes the most like yogurt.\").\n- Dairy 092: Also runny, but not as much as 053. In addition, there's a thick, slimy component to the texture that gives it nice body. Acidity is very mild (milder than 053), no off-flavours sticking out. **Silfa's favourite**. \n- Soy 053: Quite runny, similar to dairy 053, though a bit more watery (might be also due to the lower fat). Too sour, very strong single acidity that reminds of red currant and tingles on the tongue. Fruity notes, vanilla. \n- Soy 092: Quite runny, very similar to soy 053. Missing the body of dairy 092. Strong vanilla note and quite strong acidity. Some undefinable off-notes. Duncan thinks it's pretty bad tasting.\n\n**Tasting cold (after a few days in the fridge)**\n- Dairy 053: Soft and good body, a bit watery. Just plops off a spoon. Quite acidic and quite clean acidity. No off notes.\n- Dairy 092: Thick and gloopy, almost a bit stretchy. Drips off a spoon in a slightly viscous way. Very good almost buttery taste and fine acidity (not overwhelming). Still Silfa's favourite. \n- Soy 053: Bit of syneresis and looks a bit feathered (though gets better again once stirred). Quite runny texture. Very sour and quite a one-note, clean acidity, bit fizzy on the tongue. Clear vanilla note (might be that specific soy milk). Not much body (neither in texture nor in taste). A bit too sour for me to eat/enjoy. Duncan thinks it has similar sourness to fil, but needs more body/thickness.\n- Soy 092: Bit of syneresis and looks a bit feathered (though gets better again once stirred). Clear vanilla note (might be that specific soy milk). Quite runny texture, but also a tiny bit viscous. Sour, but also a mild/buttery note. Has more body in flavour than 092, better. Duncan likes this better, mostly because of the vanilla note.\n\n**Conclusions**\n- Find higher fat soy milk? \n- Test same cultures with oat milk\n- Test different cultures and compare\n- Some time in between would probably be good, e.g. 10h at 40¬∞C.\n\n### Vege011 and √ñresunds fil starter cultures\n_2022-06-16_\nStarter cultures: **Vege 01**, **√ñresunds fil (Sk√•nemejerier)**\nSubstrates: Fresh dairy milk (3% fat), Alpro soy milk (1.8% fat)\n\n**Scalding**: Heat up milks to approx. 90¬∞C on the stove, leave for a minute, then pour into prepared jars and cool down in a water bath.\n**Starter culture**: \n- Freeze-dried culture: Pour a bit of the freeze-dried starter culture (approx. 1/8 tsp) into 25 mL of water, shake. Use approx. 5 mL of that to inoculate each jar (of about 200 mL).\n- Store-bought fil: Take 1/2 Tbsp of fil and stir into each jar (of about 200 mL) = **1/4 Tbsp/100 mL**. \n\n**1st fermentation**: **8h, 40¬∞C** (in the rice cooker)\nAfter 3h, the fil-inoculated soy and dairy milks already firmed up and started to get sour, while the Vege011 milks were still liquid and sweet. \nAfter 6h, the fil-inoculated firmed up even more, Vege011 were getting a little bit thicker.\nAfter 8h: fil-inoculated firmed up a lot in both soy and dairy. Vege011 have soft yogurt consistency.\n\n**Tasting at room temperature**\n- Dairy 011: Quite loose structure. Not very sour but nice taste.\n- Soy 011: Quite loose structure, looser than dairy 011. Not sour, quite sweet actually and very vanilla-y.\n- Dairy fil: Good stable gel-structure and very nice sourness. But not so nice to taste warm.\n- Soy fil: Firmness in between Dairy fil and Dairy 011. Not as sour as dairy fil but pleasant. Very vanilla-y.\n\n**Tasting cold (after a day in the fridge)**\n- Dairy 011: Smells very animaly/milky. Has firmed up a lot and holds shape on spoon. Mellow acidity, bit funky. Very pleasant. Slight cheesiness maybe. Great texture, almost like stirred yogurt from the start. Much denser than the soy yogurts. When stirred it becomes very homogenous and smooth, with a bit of a gloopy, viscous texture that slowly drips off a spoon. Duncan: texture is better, but taste is not much better than the soy gurts. \n- Soy 011: Smells like vanilla yogurt. Wobbly-gelly. Very loose, runny structure. Taste is very nice. Not really sour, but the sweetness of the soy milk has disappeared and it's quite neutral with a nice vanilla note. When stirred, it's very runny and looks almost like custard. Curdles a bit. Very refreshing taste. Duncan found it watery, but after adding a bit of salt it tasted much better.\n- Dairy fil: Smells a bit lemony. Great taste, very pleasant. Rich taste, mellow acidity, no off flavours. Texture is quite firm, stays on spoon. But when stirred it becomes nicely soft and smooth, even a bit thinner than dairy 011 and a bit less viscous. Duncan: could still have more acidity, but nice taste.\n- Soy fil: Smells less like vanilla and more a bit animaly/milky. A bit more sour than soy 011, but also not very strong. Very nice acidity level actually. Vanilla aroma is not overwhelming, but present. Texture is like a loose gel. When stirred, it gets almost gloopy. More homogeneous texture than soy 011, very smooth. Clean taste. Duncan thinks it should be more acidic.\n\n**Conclusions**\n- Dairy 011 and dairy fil are quite similar in taste, texture and acidity level. Dairy 011 is a bit more mouth-filling and viscous, maybe some bacteria that make exopolysaccharides?\n- Soy011 is too loose and thin. Try fermenting longer? \n- Soy fil worked really well, but could also benefit from a bit longer fermentation.\n- The vanilla taste in the soy milk is a bit much, try to find another plant milk to test.\n- Salt improves taste of soy yogurts. \n\n## Oat\n_2022-05-06\nStarter cultures: **Vege 053**, **Vege 092**\nSubstrates: Oatly chilled mellan (1.5% fat)\n\n**Scalding**: Heat up milk to approx. 90¬∞C on the stove, leave for a minute, then pour into prepared jars and cool down in a water bath.\n**Starter culture**: Pour a bit of the freeze-dried starter culture (fraction of 1/4 tsp) into 10 mL of water, shake. Use approx. 1.5 mL of that to inoculate each jar.\n\n**1st fermentation**: **8h, 40¬∞C** (in the rice cooker)\nNot very thick texture, so leave for a few more hours. After that it got semi-thick and pleasantly sour, but not great. \n_Try again with some starch addition._\n\n## Pea\n_2022-05\nStarter cultures: **Vege 053**, **Vege 092**\nSubstrates: Sproud pea drink\n\n**Scalding**: Heat up to approx. 90¬∞C on the stove, leave for a minute, then pour into prepared jars and cool down in a water bath.\n**Starter culture**: Pour a bit of the freeze-dried starter culture (fraction of 1/4 tsp) into 10 mL of water, shake. Use approx. 1.5 mL of that to inoculate each jar.\n\n**1st fermentation**: **8h, 40¬∞C** (in the rice cooker)\nNo thickening at all. Leave for another 8h at 40¬∞C. Still no thickening at all. Slightly sour taste, but not very pleasant.\n_Complete failure, not suitable for yogurt making.\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/fennel_mint_lemon":{"title":"Fennel with mint and lemon","content":"\n![](projects/attachments/Fermented%20fennel%20with%20lemon%20and%20mint.jpg)\n\nRecipe: [Vegetable recipes - Fennel with mint and lemon](projects/fermentation/Vegetable%20recipes.md#Fennel%20with%20mint%20and%20lemon)\n\n_2022-07-25:_\n48h: No cloudiness yet. Fennel tastes crunchy and slightly salty, not sour at all.","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/fermentation_main":{"title":"Fermentation projects","content":"\n### Vegetables fermentations\n\n[Vegetable recipes](projects/fermentation/Vegetable recipes)\n[Fermented vegetable production](projects/fermentation/Fermented%20vegetable%20production.md)\n\n### Dairy- and plant-based milk fermentations\n[[Yogurt recipes]]\n[Yogurt production](projects/fermentation/Yogurt production)\n\n### Tempeh\n[[Tempeh recipes]]\n[Tempeh experiments](projects/fermentation/Tempeh experiments)\n[Tempeh links](projects/fermentation/Tempeh links)\n\n### Koji, shoyu, aminos\n\n[Koji recipes](projects/fermentation/Koji recipes)\n[[Koji production]]\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/fermented_carrot_parsley":{"title":"Fermented carrot and parsley root","content":"\n![[projects/attachments/Screenshot 2022-06-10 at 20.07.38.png]]\nRecipe: [Vegetable recipes - Vietnamese pickled carrot and daikon](projects/fermentation/Vegetable%20recipes.md#Vietnamese%20pickled%20carrot%20and%20daikon)\n\n_2022-03:_\nMade with **parsley root** instead of daikon. \nTastes really nice and no problems with fungi or yeasts during incubation. Parsley root got an **interesting meaty-crunchy-chewy texture**. Has a strong parsley-root taste, so takes over the flavour a bit, but pleasant. \nNext time, ==cut bigger chunks==, it‚Äôs more satisfying to eat and more useable as a pickled side dish.\nVery good with rice, tofu and laoganma oil. \n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/noma_guide":{"title":"","content":"","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/projects/fermentation/vietnamese_carrot_daikon":{"title":"Vietnamese pickled carrot and daikon","content":"\n![](projects/attachments/Fermented%20carrot%20and%20daikon.jpg)\n\nRecipe: [Vegetable recipes - Vietnamese pickled carrot and daikon](projects/fermentation/Vegetable%20recipes.md#Vietnamese%20pickled%20carrot%20and%20daikon)\n\n_2022-07-25:_\n48h: Liquid starts getting a bit cloudy and slightly sulfuric smell develops. Daikon pieces are nicely crunchy, slightly salty and have the tiniest hint of fermentation. \n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null},"/sewing/sewing_main":{"title":"Sewing","content":"\n## Sewing projects\n### Sewing from scratch\n\n### Mending \u0026 stitching\n\n### Adjusting \u0026 thrifting\n\n\n## Sewing inspiration\n\n","lastmodified":"2022-07-27T18:17:07.629422466Z","tags":null}}